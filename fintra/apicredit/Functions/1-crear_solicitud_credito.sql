-- Function: apicredit.crear_solicitud_credito(integer, integer)

-- DROP FUNCTION apicredit.crear_solicitud_credito(integer, integer);

CREATE OR REPLACE FUNCTION apicredit.crear_solicitud_credito(_numero_solicitud integer, _und_negocio integer)
  RETURNS text AS
$BODY$

DECLARE

	 _RESULT VARCHAR :='{}';
	 _UNEGOCIO INTEGER;
	 _MSG VARCHAR :='';
	 _DATOSPRESOSLICITUD RECORD;
	 _SCORELISIM VARCHAR;
	 _ENTIDAD VARCHAR;

BEGIN

	SELECT INTO _DATOSPRESOSLICITUD ID, DSTRCT, REG_STATUS, NUMERO_SOLICITUD, PRODUCTO, ENTIDAD,
	       AFILIADO, VALOR_CUOTA, VALOR_AVAL, FECHA_CREDITO, MONTO_CREDITO,
	       NUMERO_CUOTAS, FECHA_PAGO, TIPO_IDENTIFICACION, IDENTIFICACION,
	       FECHA_EXPEDICION, PRIMER_NOMBRE, PRIMER_APELLIDO, FECHA_NACIMIENTO,
	       EMAIL, INGRESOS_USUARIO, ID_CONVENIO, ESTADO_SOL, CODIGORESPUESTA,
	       SCORE, CLASIFICACION, COMENTARIO, EMPRESA, ETAPA, ACEPTA_TERMINOS,
	       EXTRACTO_ELECTRONICO, RECOGE_FIRMAS, ASESOR, CREATION_DATE, CREATION_USER,
	       LAST_UPDATE, USER_UPDATE, TOTAL_OBLIGACIONES_FINANCIERAS, TOTAL_GASTOS_FAMILIARES,
	       TELEFONO, FINANCIA_AVAL, TIPO_CLIENTE, CIUDAD, LAT, LNG, RECHAZO_OPERACIONES,
	       DEPARTAMENTO
	FROM APICREDIT.PRE_SOLICITUDES_CREDITOS
	WHERE NUMERO_SOLICITUD=_NUMERO_SOLICITUD;



	IF _UND_NEGOCIO=30 THEN --CONSUMO FINTRA

		--VALIDAMOS QUE NO EXISTA
		PERFORM * FROM SOLICITUD_AVAL WHERE NUMERO_SOLICITUD=_NUMERO_SOLICITUD;
		IF(FOUND)THEN
		  RETURN 'false;'||'{"MSG":"Lo sentimos la solicitud numero:  '||_NUMERO_SOLICITUD||' tiene un formulario generado."}';
		END IF;

		_ENTIDAD:='CONSUMO';

	        DELETE FROM SOLICITUD_REFERENCIAS  WHERE NUMERO_SOLICITUD=_NUMERO_SOLICITUD;
	        DELETE FROM SOLICITUD_VEHICULO  WHERE NUMERO_SOLICITUD=_NUMERO_SOLICITUD;
	        DELETE FROM SOLICITUD_BIENES  WHERE NUMERO_SOLICITUD=_NUMERO_SOLICITUD;
	        DELETE FROM SOLICITUD_LABORAL  WHERE NUMERO_SOLICITUD=_NUMERO_SOLICITUD;
	        DELETE FROM SOLICITUD_PERSONA WHERE NUMERO_SOLICITUD=_NUMERO_SOLICITUD;
	        DELETE FROM APICREDIT.PRE_LIQUIDACION_CREDITOS WHERE NUMERO_SOLICITUD=_NUMERO_SOLICITUD;
	        DELETE FROM SOLICITUD_DOCUMENTOS WHERE NUMERO_SOLICITUD=_NUMERO_SOLICITUD;
	        DELETE FROM SOLICITUD_AVAL  WHERE NUMERO_SOLICITUD=_NUMERO_SOLICITUD;

		INSERT INTO SOLICITUD_AVAL (REG_STATUS, DSTRCT, NUMERO_SOLICITUD, FECHA_CONSULTA, VALOR_SOLICITADO,
					       AGENTE, AFILIADO, CODIGO, NUMERO_APROBACION, ESTADO_SOL, TIPO_PERSONA,
					       VALOR_APROBADO, TIPO_NEGOCIO, NUM_TIPO_NEGOCIO, BANCO, SUCURSAL,
					       NUM_CHEQUERA, COD_NEG, CREATION_DATE, CREATION_USER, LAST_UPDATE,
					       USER_UPDATE, ASESOR, ID_CONVENIO, PRODUCTO, SERVICIO, CIUDAD_MATRICULA,
					       VALOR_PRODUCTO, COD_SECTOR, COD_SUBSECTOR, PLAZO, PLAZO_PR_CUOTA,
					       CIUDAD_CHEQUE, MOD_FORMULARIO, RENOVACION, FECHA_PRIMERA_CUOTA,
					       COD_NEGOCIO_RENOVADO, PRE_APROBADO_MICRO, SCORE_BURO, SCORE_LISIM,
					       SCORE_TOTAL, ACCION_SUGERIDA, CAPACIDAD_ENDEUDAMIENTO, CUOTAS_PENDIENTES,
					       ALTURA_MORA_ACTUAL_TITULAR, ALTURA_MORA_HISTORY_TITULAR, ALTURA_MORA_ACTUAL_CODEUDOR,
					       ALTURA_MORA_HISTORY_CODEUDOR)

						SELECT
						       SA.REG_STATUS, SA.DSTRCT, NUMERO_SOLICITUD, FECHA_CONSULTA, VALOR_SOLICITADO,
						       AGENTE, SA.AFILIADO, COALESCE(P.COD_FENALCO,'000000000') AS CODIGO, NUMERO_APROBACION, ESTADO_SOL, TIPO_PERSONA,
						       VALOR_APROBADO, TIPO_NEGOCIO, NUM_TIPO_NEGOCIO, BANCO, SUCURSAL,
						       NUM_CHEQUERA, COD_NEG, SA.CREATION_DATE, SA.CREATION_USER, SA.LAST_UPDATE,
						       SA.USER_UPDATE, ASESOR, ID_CONVENIO, PRODUCTO, SERVICIO, CIUDAD_MATRICULA,
						       VALOR_PRODUCTO, COD_SECTOR, COD_SUBSECTOR, SA.PLAZO, PLAZO_PR_CUOTA,
						       CIUDAD_CHEQUE, MOD_FORMULARIO, RENOVACION, FECHA_PRIMERA_CUOTA,
						       COD_NEGOCIO_RENOVADO, PRE_APROBADO_MICRO, SCORE_BURO, SCORE_LISIM,
						       SCORE_TOTAL, ACCION_SUGERIDA, CAPACIDAD_ENDEUDAMIENTO, CUOTAS_PENDIENTES,
						       ALTURA_MORA_ACTUAL_TITULAR, ALTURA_MORA_HISTORY_TITULAR, ALTURA_MORA_ACTUAL_CODEUDOR,
						       ALTURA_MORA_HISTORY_CODEUDOR
						FROM APICREDIT.SOLICITUD_AVAL SA
						LEFT JOIN PROVEEDOR P ON (SA.AFILIADO=P.NIT)
						WHERE NUMERO_SOLICITUD=_NUMERO_SOLICITUD;



		INSERT INTO SOLICITUD_PERSONA (DSTRCT, NUMERO_SOLICITUD,SECUENCIA,TIPO, TIPO_PERSONA,
					       TIPO_ID,IDENTIFICACION,FECHA_EXPEDICION_ID,DPTO_EXPEDICION_ID,
					       CIUDAD_EXPEDICION_ID,PRIMER_APELLIDO, SEGUNDO_APELLIDO, PRIMER_NOMBRE,
					       SEGUNDO_NOMBRE, FECHA_NACIMIENTO, DPTO_NACIMIENTO, CIUDAD_NACIMIENTO,
					       ESTADO_CIVIL, NIVEL_ESTUDIO, PROFESION, PERSONAS_A_CARGO,NUM_DE_HIJOS,
					       GENERO, DIRECCION, DEPARTAMENTO, CIUDAD, BARRIO, ESTRATO,TIPO_VIVIENDA,
					       TIEMPO_RESIDENCIA, TELEFONO, CELULAR, EMAIL,POSEE_BIENES, CREATION_USER,
					       CREATION_DATE,NOMBRE)
						SELECT
						     DSTRCT, NUMERO_SOLICITUD, SECUENCIA, TIPO, TIPO_PERSONA,
							  TIPO_ID, IDENTIFICACION, FECHA_EXPEDICION_ID, DPTO_EXPEDICION_ID,
							  CIUDAD_EXPEDICION_ID, PRIMER_APELLIDO, SEGUNDO_APELLIDO, PRIMER_NOMBRE,
							  SEGUNDO_NOMBRE, FECHA_NACIMIENTO, DPTO_NACIMIENTO, CIUDAD_NACIMIENTO,
							  ESTADO_CIVIL, NIVEL_ESTUDIO, PROFESION, PERSONAS_A_CARGO, NUM_DE_HIJOS,
							  GENERO, DIRECCION, DEPARTAMENTO, CIUDAD, BARRIO, ESTRATO, TIPO_VIVIENDA,
							  TIEMPO_RESIDENCIA, TELEFONO, CELULAR, EMAIL, POSEE_BIENES, CREATION_USER,
							  CREATION_DATE, (PRIMER_APELLIDO||' '||SEGUNDO_APELLIDO||' '||PRIMER_NOMBRE||' '||SEGUNDO_NOMBRE)  AS NOMBRE
						FROM  APICREDIT.TAB_CONS_SOLICITUD_PERSONA
						WHERE NUMERO_SOLICITUD=_NUMERO_SOLICITUD;


		INSERT INTO SOLICITUD_LABORAL (REG_STATUS, DSTRCT, NUMERO_SOLICITUD, TIPO,SECUENCIA, OCUPACION, ACTIVIDAD_ECONOMICA,
					       NOMBRE_EMPRESA, NIT, DIRECCION, CIUDAD, DEPARTAMENTO, TELEFONO,
					       EXTENSION, CARGO, FECHA_INGRESO, TIPO_CONTRATO, SALARIO, CELULAR,
					       EMAIL, EPS, TIPO_AFILIACION, DIRECCION_COBRO, OTROS_INGRESOS,
					       CONCEPTO_OTROS_ING, GASTOS_MANUTENCION, GASTOS_CREDITOS, GASTOS_ARRIENDO,
					       CREATION_DATE, CREATION_USER, ID_PERSONA

					       )
						SELECT
						       REG_STATUS, DSTRCT, NUMERO_SOLICITUD, TIPO, SECUENCIA, OCUPACION,
						       ACTIVIDAD_ECONOMICA, NOMBRE_EMPRESA, NIT, DIRECCION, CIUDAD,
						       DEPARTAMENTO, TELEFONO, EXTENSION, CARGO, FECHA_INGRESO, TIPO_CONTRATO,
						       SALARIO, CELULAR, EMAIL, EPS, TIPO_AFILIACION, DIRECCION_COBRO,
						       OTROS_INGRESOS, CONCEPTO_OTROS_ING, GASTOS_MANUTENCION, GASTOS_CREDITOS,
						       GASTOS_ARRIENDO,CREATION_DATE,CREATION_USER ,ID_PERSONA

						FROM APICREDIT.TAB_CONS_SOLICITUD_LABORAL
						WHERE NUMERO_SOLICITUD=_NUMERO_SOLICITUD;



		INSERT INTO SOLICITUD_BIENES ( REG_STATUS, DSTRCT, NUMERO_SOLICITUD, TIPO, SECUENCIA, TIPO_DE_BIEN,
								  HIPOTECA, A_FAVOR_DE, VALOR_COMERCIAL, DIRECCION, CREATION_DATE,
								  CREATION_USER, LAST_UPDATE, USER_UPDATE)
							SELECT
							       REG_STATUS, DSTRCT, NUMERO_SOLICITUD, TIPO, SECUENCIA, TIPO_DE_BIEN,
							       HIPOTECA, A_FAVOR_DE, VALOR_COMERCIAL, DIRECCION, CREATION_DATE,
							       CREATION_USER, LAST_UPDATE, USER_UPDATE
							FROM APICREDIT.TAB_CONS_SOLICITUD_BIENES
							WHERE NUMERO_SOLICITUD=_NUMERO_SOLICITUD;


		INSERT INTO SOLICITUD_VEHICULO (REG_STATUS, DSTRCT, NUMERO_SOLICITUD, TIPO, SECUENCIA, MARCA,
								   TIPO_VEHICULO, PLACA, MODELO, VALOR_COMERCIAL, CUOTA_MENSUAL,
								   PIGNORADO_A_FAVOR_DE, CREATION_DATE, CREATION_USER)
							SELECT
							       REG_STATUS, DSTRCT, NUMERO_SOLICITUD, TIPO, SECUENCIA, MARCA,
							       TIPO_VEHICULO, PLACA, MODELO, VALOR_COMERCIAL, CUOTA_MENSUAL,
							       PIGNORADO_A_FAVOR_DE, CREATION_DATE, CREATION_USER
							FROM APICREDIT.TAB_CONS_SOLICITUD_VEHICULO
							WHERE NUMERO_SOLICITUD=_NUMERO_SOLICITUD;


		INSERT INTO SOLICITUD_REFERENCIAS(DSTRCT, NUMERO_SOLICITUD, TIPO, TIPO_REFERENCIA, SECUENCIA,
								       PRIMER_APELLIDO, SEGUNDO_APELLIDO, PRIMER_NOMBRE, SEGUNDO_NOMBRE,
								       PARENTESCO, TELEFONO1, CELULAR, DIRECCION, DEPARTAMENTO, CIUDAD,
								       CREATION_USER, CREATION_DATE)
							SELECT DSTRCT, NUMERO_SOLICITUD, TIPO, TIPO_REFERENCIA, SECUENCIA,
							       PRIMER_APELLIDO, SEGUNDO_APELLIDO, PRIMER_NOMBRE, SEGUNDO_NOMBRE,
							       PARENTESCO,TELEFONO1,CELULAR,DIRECCION,DEPARTAMENTO,CIUDAD,
							       CREATION_USER,CREATION_DATE
							FROM APICREDIT.TAB_CONS_SOLICITUD_REFERENCIAS
							WHERE NUMERO_SOLICITUD=_NUMERO_SOLICITUD;

		--GUARDAMOS LA PRE LIQUIDACION DEL CREDITO

		INSERT INTO apicredit.pre_liquidacion_creditos(
			    dstrct, numero_solicitud, fecha, dias, cuota, saldo_inicial,
			    capital, interes, custodia, seguro, remesa, valor_cuota, saldo_final,
			    valor_aval,cuota_manejo, creation_user, creation_date)

		SELECT 'FINV' AS DSTRCT,
		       _NUMERO_SOLICITUD AS NUMERO_SOLICITUD,
		        FECHA::DATE,
			DIAS,
			ITEM AS CUOTA,
			SALDO_INICIAL,
			CAPITAL,
			INTERES,
			CUSTODIA,
			SEGURO,
			REMESA,
			VALOR AS VALOR_CUOTA,
			SALDO_FINAL,
			coalesce(VALOR_AVAL,0.00),
			CUOTA_MANEJO,
			_DATOSPRESOSLICITUD.CREATION_USER AS CREATION_USER,
			NOW()::DATE AS CREATION_DATE
		 FROM  APICREDIT.EG_LIQUIDADOR_CREDITOS(_DATOSPRESOSLICITUD.MONTO_CREDITO::NUMERIC, _DATOSPRESOSLICITUD.NUMERO_CUOTAS::INTEGER, _DATOSPRESOSLICITUD.FECHA_PAGO::DATE, _DATOSPRESOSLICITUD.ID_CONVENIO::INTEGER) AS RETORNO;


		--Modelo Lisim consumo
		 _SCORELISIM:=APICREDIT.SP_SCOREFORMULARIOCONSUMO(_NUMERO_SOLICITUD);
		 RAISE NOTICE '_SCORELISIM CONSUMO : %',_SCORELISIM;

	ELSIF  _UND_NEGOCIO=31  THEN --EDUCATIVO

		_ENTIDAD:='EDUCATIVO';
		_SCORELISIM:=APICREDIT.SP_SCOREFORMULARIO(_NUMERO_SOLICITUD);
		RAISE NOTICE '_SCORELISIM EDUCATIVO : %',_SCORELISIM;

	ELSE
		 _RESULT :='false;'||'{"MSG":"UNIDAD NEGOCIO NO ENCONTRADA REVISAR PARAMETROS DE ENTRADA, (UND_NEG:'||_UND_NEGOCIO||')"}';

	END IF;

	--creamos el negocio de credito
	_RESULT:= apicredit.eg_generar_negocio_credito(_UND_NEGOCIO,_NUMERO_SOLICITUD, _DATOSPRESOSLICITUD.CREATION_USER, false, _ENTIDAD, 'N', 'N', '{}'::text[]);

	RETURN _RESULT;

END $BODY$
  LANGUAGE plpgsql VOLATILE;
ALTER FUNCTION apicredit.crear_solicitud_credito(integer, integer)
  OWNER TO postgres;
