-- Function: apicredit.eg_clonar_solicitud_credito_fitra(integer, integer, character varying)

-- DROP FUNCTION apicredit.eg_clonar_solicitud_credito_fitra(integer, integer, character varying);

CREATE OR REPLACE FUNCTION apicredit.eg_clonar_solicitud_credito_fitra(_numerosolicitudpadre integer, nuevonumerosolicitud integer, _userlogin character varying)
  RETURNS text AS
$BODY$
DECLARE
  RECORDPRESOLICITUDES RECORD;
  _ENTRAMITE INTEGER:=0;
  RETORNO TEXT:='';
BEGIN

     --1)BUSCAMOS LA PRESOLICITUD DE CREDITO
	SELECT INTO RECORDPRESOLICITUDES
                C.NUMERO_SOLICITUD,
		C.PRODUCTO,
		C.ENTIDAD,
                C.AFILIADO,
                LOWER(P.PAYMENT_NAME) AS NAME_AFILIADO,
                P.COD_FENALCO AS CODIGO,
	        C.VALOR_CUOTA,
                C.VALOR_AVAL,
                C.FECHA_CREDITO,
                C.MONTO_CREDITO,
                C.NUMERO_CUOTAS,
                C.FECHA_PAGO::DATE,
                C.TIPO_IDENTIFICACION,
                C.IDENTIFICACION,
                C.FECHA_EXPEDICION::DATE,
                C.PRIMER_NOMBRE,
                C.PRIMER_APELLIDO,
		C.FECHA_NACIMIENTO::DATE,
		C.EMAIL,
		C.INGRESOS_USUARIO,
                C.ID_CONVENIO,
                C.ESTADO_SOL,
		CASE WHEN C.ESTADO_SOL='P' THEN 'PRE APROBADO'
		     WHEN C.ESTADO_SOL='R' THEN 'RECHAZADO'
		     WHEN C.ESTADO_SOL='B' THEN 'BORRADOR' END AS ESTADO_SOL_DESC,
                C.EMPRESA,
                C.ETAPA,
                CASE WHEN SA.COD_NEG IS NULL THEN '' ELSE SA.COD_NEG  END AS  COD_NEG,
                TOTAL_OBLIGACIONES_FINANCIERAS,
                TOTAL_GASTOS_FAMILIARES,
                C.FINANCIA_AVAL,
                C.TIPO_CLIENTE,
                C.CREATION_DATE,
                C.ASESOR
            FROM APICREDIT.PRE_SOLICITUDES_CREDITOS C
	    INNER JOIN PROVEEDOR P ON (P.NIT=C.AFILIADO)
	    LEFT JOIN SOLICITUD_AVAL SA ON (SA.NUMERO_SOLICITUD=C.NUMERO_SOLICITUD)
            WHERE  C.NUMERO_SOLICITUD=NUEVONUMEROSOLICITUD  AND C.ESTADO_SOL='B' ;

	RAISE NOTICE 'RECORDPRESOLICITUDES: %',RECORDPRESOLICITUDES;
        --VALIDAMOS QUE EXISTAN LAS PRE-SOLICITUDES DEL CREDITO
        IF(RECORDPRESOLICITUDES IS NOT NULL AND _NUMEROSOLICITUDPADRE >0)THEN

		--0.)VALIDAMOS LAS SOLICITUDES EN TRAMITE
		/*SELECT INTO _ENTRAMITE COUNT(*) FROM SOLICITUD_AVAL SA  INNER JOIN SOLICITUD_PERSONA SP
		    ON(SP.NUMERO_SOLICITUD=SA.NUMERO_SOLICITUD)
		    WHERE IDENTIFICACION =RECORDPRESOLICITUDES.IDENTIFICACION AND ESTADO_SOL NOT IN ('A','R','T');*/
		_ENTRAMITE:=0;
		IF(_ENTRAMITE = 0 )THEN
			--1.)INSERTAMOS LAS SOLICIUD AVAL
			INSERT INTO SOLICITUD_AVAL
						(REG_STATUS,
						 DSTRCT,
						 NUMERO_SOLICITUD,
						 FECHA_CONSULTA,
						 VALOR_SOLICITADO,
						 AGENTE,
						 AFILIADO,
						 CODIGO,
						 NUMERO_APROBACION,
						 ESTADO_SOL,
						 TIPO_PERSONA,
						 VALOR_APROBADO,
						 TIPO_NEGOCIO,
						 NUM_TIPO_NEGOCIO,
						 BANCO,
						 SUCURSAL,
						 NUM_CHEQUERA,
						 COD_NEG,
						 CREATION_DATE,
						 CREATION_USER,
						 LAST_UPDATE,
						 USER_UPDATE,
						 ID_CONVENIO,
						 PRODUCTO,
						 SERVICIO,
						 CIUDAD_MATRICULA,
						 VALOR_PRODUCTO,
						 ASESOR,
						 COD_SECTOR,
						 COD_SUBSECTOR,
						 PLAZO,
						 PLAZO_PR_CUOTA,
						 CIUDAD_CHEQUE,
						 ACCION_SUGERIDA)
				    (SELECT REG_STATUS,
					    DSTRCT,
					    NUEVONUMEROSOLICITUD,
					    RECORDPRESOLICITUDES.CREATION_DATE::DATE,
					    RECORDPRESOLICITUDES.MONTO_CREDITO,
					    ''::VARCHAR AS AGENTE,
					    RECORDPRESOLICITUDES.AFILIADO,
					    RECORDPRESOLICITUDES.CODIGO,
					    ''::VARCHAR AS NUMERO_APROBACION,
					    'P'::VARCHAR AS ESTADO_SOL,
					    TIPO_PERSONA,
					    RECORDPRESOLICITUDES.MONTO_CREDITO,
					    '03'::VARCHAR AS TIPO_NEGOCIO,
					    ''::VARCHAR AS NUM_TIPO_NEGOCIO,
					    NULL AS BANCO,
					    ''::VARCHAR AS SUCURSAL,
					    ''::VARCHAR AS NUM_CHEQUERA,
					     NULL AS NEGOCIO,
					    RECORDPRESOLICITUDES.CREATION_DATE,
					    _USERLOGIN AS CREATION_USER,
					    '0099-01-01 00:00:00'::TIMESTAMP AS LAST_UPDATE,
					    ''::VARCHAR AS USER_UPDATE,
					    RECORDPRESOLICITUDES.ID_CONVENIO,
					    RECORDPRESOLICITUDES.PRODUCTO,
					    ''::VARCHAR AS SERVICIO,
					    ''::VARCHAR AS CIUDAD_MATRICULA,
					    RECORDPRESOLICITUDES.MONTO_CREDITO,
					    RECORDPRESOLICITUDES.ASESOR,
					    'CS2'::VARCHAR AS COD_SECTOR,  --SECTOR DE EDUCATIVO
					    '102'::VARCHAR AS  COD_SUBSECTOR, --SUBSECTOR EDUCATIVO
					    RECORDPRESOLICITUDES.NUMERO_CUOTAS AS PLAZO,
					    '30'::VARCHAR AS PLAZO_PR_CUOTA,
					    ''::VARCHAR AS CIUDAD_CHEQUE,
					    'APROBAR'::VARCHAR AS ACCION_SUGERIDA
				     FROM   SOLICITUD_AVAL
				     WHERE  NUMERO_SOLICITUD =_NUMEROSOLICITUDPADRE);


		    --2.) INSERTAMOS SOLICITUD_BIENES
			INSERT INTO SOLICITUD_BIENES
					    (REG_STATUS,
					     DSTRCT,
					     NUMERO_SOLICITUD,
					     TIPO,
					     SECUENCIA,
					     TIPO_DE_BIEN,
					     HIPOTECA,
					     A_FAVOR_DE,
					     VALOR_COMERCIAL,
					     DIRECCION,
					     CREATION_DATE,
					     CREATION_USER,
					     LAST_UPDATE,
					     USER_UPDATE)
				(SELECT REG_STATUS,
					DSTRCT,
					NUEVONUMEROSOLICITUD,
					TIPO,
					SECUENCIA,
					TIPO_DE_BIEN,
					HIPOTECA,
					A_FAVOR_DE,
					VALOR_COMERCIAL,
					DIRECCION,
					RECORDPRESOLICITUDES.CREATION_DATE,
					_USERLOGIN AS CREATION_USER,
					'0099-01-01 00:00:00'::TIMESTAMP AS LAST_UPDATE,
					''::VARCHAR AS USER_UPDATE
				 FROM   SOLICITUD_BIENES
				 WHERE  NUMERO_SOLICITUD =_NUMEROSOLICITUDPADRE);

			--3.) INSERTAMOS LA SOLICITUD_CUENTAS
			INSERT INTO SOLICITUD_CUENTAS
					    (REG_STATUS,
					     DSTRCT,
					     NUMERO_SOLICITUD,
					     CONSECUTIVO,
					     TIPO,
					     BANCO,
					     CUENTA,
					     FECHA_APERTURA,
					     NUMERO_TARJETA,
					     CREATION_DATE,
					     CREATION_USER,
					     LAST_UPDATE,
					     USER_UPDATE
					)
				(SELECT REG_STATUS,
					DSTRCT,
					NUEVONUMEROSOLICITUD,
					CONSECUTIVO,
					TIPO,
					BANCO,
					CUENTA,
					FECHA_APERTURA,
					NUMERO_TARJETA,
					RECORDPRESOLICITUDES.CREATION_DATE,
					_USERLOGIN AS CREATION_USER,
					'0099-01-01 00:00:00'::TIMESTAMP AS LAST_UPDATE,
					''::VARCHAR AS USER_UPDATE
				 FROM   SOLICITUD_CUENTAS
				 WHERE  NUMERO_SOLICITUD = _NUMEROSOLICITUDPADRE);

			--4.) INSERTAMOS LA SOLICITUD_ESTUDIANTE
			INSERT INTO SOLICITUD_ESTUDIANTE
					    (REG_STATUS,
					     DSTRCT,
					     NUMERO_SOLICITUD,
					     PARENTESCO_GIRADOR,
					     UNIVERSIDAD,
					     PROGRAMA,
					     FECHA_INGRESO_PROGRAMA,
					     CODIGO,
					     SEMESTRE,
					     VALOR_SEMESTRE,
					     TIPO_CARRERA,
					     TRABAJA,
					     NOMBRE_EMPRESA,
					     DIRECCION_EMPRESA,
					     TELEFONO_EMPRESA,
					     SALARIO,
					     CREATION_DATE,
					     CREATION_USER,
					     LAST_UPDATE,
					     USER_UPDATE)
				(SELECT REG_STATUS,
					DSTRCT,
					NUEVONUMEROSOLICITUD,
					PARENTESCO_GIRADOR,
					UNIVERSIDAD,
					PROGRAMA,
					FECHA_INGRESO_PROGRAMA,
					CODIGO,
					SEMESTRE,
					VALOR_SEMESTRE,
					TIPO_CARRERA,
					TRABAJA,
					NOMBRE_EMPRESA,
					DIRECCION_EMPRESA,
					TELEFONO_EMPRESA,
					SALARIO,
					RECORDPRESOLICITUDES.CREATION_DATE,
					_USERLOGIN AS CREATION_USER,
					'0099-01-01 00:00:00'::TIMESTAMP AS LAST_UPDATE,
					''::VARCHAR AS USER_UPDATE
				 FROM   SOLICITUD_ESTUDIANTE
				 WHERE  NUMERO_SOLICITUD = _NUMEROSOLICITUDPADRE);

			--5.) INSERTAMOS LA SOLICITUD_HIJOS
			INSERT INTO SOLICITUD_HIJOS
					    (REG_STATUS,
					     DSTRCT,
					     NUMERO_SOLICITUD,
					     TIPO,
					     SECUENCIA,
					     NOMBRE,
					     DIRECCION,
					     TELEFONO,
					     EDAD,
					     EMAIL,
					     CREATION_DATE,
					     CREATION_USER,
					     LAST_UPDATE,
					     USER_UPDATE)
				(SELECT REG_STATUS,
					DSTRCT,
					NUEVONUMEROSOLICITUD,
					TIPO,
					SECUENCIA,
					NOMBRE,
					DIRECCION,
					TELEFONO,
					EDAD,
					EMAIL,
					RECORDPRESOLICITUDES.CREATION_DATE,
					_USERLOGIN AS CREATION_USER,
					'0099-01-01 00:00:00'::TIMESTAMP AS LAST_UPDATE,
					''::VARCHAR AS USER_UPDATE
				 FROM   SOLICITUD_HIJOS
				 WHERE  NUMERO_SOLICITUD = _NUMEROSOLICITUDPADRE);

			--6.)INSERTAMOS LA SOLICITUD_LABORAL
			INSERT INTO SOLICITUD_LABORAL
					    (REG_STATUS,
					     DSTRCT,
					     NUMERO_SOLICITUD,
					     TIPO,
					     OCUPACION,
					     ACTIVIDAD_ECONOMICA,
					     NOMBRE_EMPRESA,
					     NIT,
					     DIRECCION,
					     CIUDAD,
					     DEPARTAMENTO,
					     TELEFONO,
					     EXTENSION,
					     CARGO,
					     FECHA_INGRESO,
					     TIPO_CONTRATO,
					     SALARIO,
					     CELULAR,
					     EMAIL,
					     EPS,
					     TIPO_AFILIACION,
					     DIRECCION_COBRO,
					     OTROS_INGRESOS,
					     CONCEPTO_OTROS_ING,
					     GASTOS_MANUTENCION,
					     GASTOS_CREDITOS,
					     GASTOS_ARRIENDO,
					     CREATION_DATE,
					     CREATION_USER,
					     LAST_UPDATE,
					     USER_UPDATE)
				(SELECT REG_STATUS,
					DSTRCT,
					NUEVONUMEROSOLICITUD,
					TIPO,
					OCUPACION,
					ACTIVIDAD_ECONOMICA,
					NOMBRE_EMPRESA,
					NIT,
					DIRECCION,
					CIUDAD,
					DEPARTAMENTO,
					TELEFONO,
					EXTENSION,
					CARGO,
					FECHA_INGRESO,
					TIPO_CONTRATO,
					RECORDPRESOLICITUDES.INGRESOS_USUARIO,
					CELULAR,
					EMAIL,
					EPS,
					TIPO_AFILIACION,
					DIRECCION_COBRO,
					OTROS_INGRESOS,
					CONCEPTO_OTROS_ING,
					GASTOS_MANUTENCION,
					RECORDPRESOLICITUDES.TOTAL_OBLIGACIONES_FINANCIERAS,
					GASTOS_ARRIENDO,
					RECORDPRESOLICITUDES.CREATION_DATE,
					_USERLOGIN AS CREATION_USER,
					'0099-01-01 00:00:00'::TIMESTAMP AS LAST_UPDATE,
					''::VARCHAR AS USER_UPDATE
				 FROM   SOLICITUD_LABORAL
				 WHERE  NUMERO_SOLICITUD = _NUMEROSOLICITUDPADRE);

			--7.) INSERTAMOS LA SOLICITUD_NEGOCIO
			INSERT INTO SOLICITUD_NEGOCIO
					    (REG_STATUS,
					     DSTRCT,
					     NUMERO_SOLICITUD,
					     COD_SECTOR,
					     COD_SUBSECTOR,
					     NOMBRE,
					     DIRECCION,
					     DEPARTAMENTO,
					     CIUDAD,
					     BARRIO,
					     TELEFONO,
					     TIEMPO_LOCAL,
					     NUM_EXP_NEGOCIO,
					     TIEMPO_MICROEMPRESARIO,
					     NUM_TRABAJADORES,
					     CREATION_DATE,
					     CREATION_USER,
					     LAST_UPDATE,
					     USER_UPDATE)
				(SELECT REG_STATUS,
					DSTRCT,
					NUEVONUMEROSOLICITUD,
					COD_SECTOR,
					COD_SUBSECTOR,
					NOMBRE,
					DIRECCION,
					DEPARTAMENTO,
					CIUDAD,
					BARRIO,
					TELEFONO,
					TIEMPO_LOCAL,
					NUM_EXP_NEGOCIO,
					TIEMPO_MICROEMPRESARIO,
					NUM_TRABAJADORES,
					RECORDPRESOLICITUDES.CREATION_DATE,
					_USERLOGIN AS CREATION_USER,
					'0099-01-01 00:00:00'::TIMESTAMP AS LAST_UPDATE,
					''::VARCHAR AS USER_UPDATE
				 FROM   SOLICITUD_NEGOCIO
				 WHERE  NUMERO_SOLICITUD = _NUMEROSOLICITUDPADRE);

			--8.) INSERTAMOS LA SOLICITUD_PERSONA
			INSERT INTO SOLICITUD_PERSONA
					    (REG_STATUS,
					     DSTRCT,
					     NUMERO_SOLICITUD,
					     TIPO_PERSONA,
					     TIPO,
					     CODCLI,
					     PRIMER_APELLIDO,
					     SEGUNDO_APELLIDO,
					     PRIMER_NOMBRE,
					     SEGUNDO_NOMBRE,
					     NOMBRE,
					     CIUDAD,
					     GENERO,
					     ESTADO_CIVIL,
					     DIRECCION,
					     DEPARTAMENTO,
					     BARRIO,
					     IDENTIFICACION,
					     TIPO_ID,
					     FECHA_EXPEDICION_ID,
					     CIUDAD_EXPEDICION_ID,
					     DPTO_EXPEDICION_ID,
					     FECHA_NACIMIENTO,
					     CIUDAD_NACIMIENTO,
					     DPTO_NACIMIENTO,
					     NIVEL_ESTUDIO,
					     PROFESION,
					     PERSONAS_A_CARGO,
					     NUM_DE_HIJOS,
					     TOTAL_GRUPO_FAMILIAR,
					     ESTRATO,
					     TIEMPO_RESIDENCIA,
					     TIPO_VIVIENDA,
					     TELEFONO,
					     CELULAR,
					     EMAIL,
					     TELEFONO2,
					     PRIMER_APELLIDO_CONY,
					     SEGUNDO_APELLIDO_CONY,
					     PRIMER_NOMBRE_CONY,
					     SEGUNDO_NOMBRE_CONY,
					     TIPO_ID_CONY,
					     ID_CONY,
					     EMPRESA_CONY,
					     DIRECCION_CONY,
					     TELEFONO_CONY,
					     SALARIO_CONY,
					     CELULAR_CONY,
					     EMAIL_CONY,
					     CARGO_CONY,
					     CIIU,
					     FAX,
					     TIPO_EMPRESA,
					     FECHA_CONSTITUCION,
					     REPRESENTANTE_LEGAL,
					     GENERO_REPRESENTANTE,
					     TIPO_ID_REPRESENTANTE,
					     ID_REPRESENTANTE,
					     FIRMADOR_CHEQUES,
					     GENERO_FIRMADOR,
					     TIPO_ID_FIRMADOR,
					     ID_FIRMADOR,
					     CREATION_DATE,
					     CREATION_USER,
					     LAST_UPDATE,
					     USER_UPDATE)
				(SELECT REG_STATUS,
					DSTRCT,
					NUEVONUMEROSOLICITUD,
					TIPO_PERSONA,
					TIPO,
					CODCLI,
					PRIMER_APELLIDO,
					SEGUNDO_APELLIDO,
					PRIMER_NOMBRE,
					SEGUNDO_NOMBRE,
					NOMBRE,
					CIUDAD,
					GENERO,
					ESTADO_CIVIL,
					DIRECCION,
					DEPARTAMENTO,
					BARRIO,
					IDENTIFICACION,
					TIPO_ID,
					FECHA_EXPEDICION_ID,
					CIUDAD_EXPEDICION_ID,
					DPTO_EXPEDICION_ID,
					FECHA_NACIMIENTO,
					CIUDAD_NACIMIENTO,
					DPTO_NACIMIENTO,
					NIVEL_ESTUDIO,
					PROFESION,
					PERSONAS_A_CARGO,
					NUM_DE_HIJOS,
					TOTAL_GRUPO_FAMILIAR,
					ESTRATO,
					TIEMPO_RESIDENCIA,
					TIPO_VIVIENDA,
					TELEFONO,
					CELULAR,
					EMAIL,
					TELEFONO2,
					PRIMER_APELLIDO_CONY,
					SEGUNDO_APELLIDO_CONY,
					PRIMER_NOMBRE_CONY,
					SEGUNDO_NOMBRE_CONY,
					TIPO_ID_CONY,
					ID_CONY,
					EMPRESA_CONY,
					DIRECCION_CONY,
					TELEFONO_CONY,
					SALARIO_CONY,
					CELULAR_CONY,
					EMAIL_CONY,
					CARGO_CONY,
					CIIU,
					FAX,
					TIPO_EMPRESA,
					FECHA_CONSTITUCION,
					REPRESENTANTE_LEGAL,
					GENERO_REPRESENTANTE,
					TIPO_ID_REPRESENTANTE,
					ID_REPRESENTANTE,
					FIRMADOR_CHEQUES,
					GENERO_FIRMADOR,
					TIPO_ID_FIRMADOR,
					ID_FIRMADOR,
					RECORDPRESOLICITUDES.CREATION_DATE,
					_USERLOGIN AS CREATION_USER,
					'0099-01-01 00:00:00'::TIMESTAMP AS LAST_UPDATE,
					''::VARCHAR AS USER_UPDATE
				 FROM   SOLICITUD_PERSONA
				 WHERE  NUMERO_SOLICITUD = _NUMEROSOLICITUDPADRE);

			--9.) INSERTAMOS LA SOLICITUD_REFERENCIAS
			INSERT INTO SOLICITUD_REFERENCIAS
					    (REG_STATUS,
					     DSTRCT,
					     NUMERO_SOLICITUD,
					     TIPO,
					     TIPO_REFERENCIA,
					     SECUENCIA,
					     NOMBRE,
					     PRIMER_APELLIDO,
					     SEGUNDO_APELLIDO,
					     PRIMER_NOMBRE,
					     SEGUNDO_NOMBRE,
					     TELEFONO1,
					     TELEFONO2,
					     EXTENSION,
					     CELULAR,
					     EMAIL,
					     DIRECCION,
					     CIUDAD,
					     DEPARTAMENTO,
					     TIEMPO_CONOCIDO,
					     PARENTESCO,
					     CREATION_DATE,
					     CREATION_USER,
					     LAST_UPDATE,
					     USER_UPDATE)
				(SELECT REG_STATUS,
					DSTRCT,
					NUEVONUMEROSOLICITUD,
					TIPO,
					TIPO_REFERENCIA,
					SECUENCIA,
					NOMBRE,
					PRIMER_APELLIDO,
					SEGUNDO_APELLIDO,
					PRIMER_NOMBRE,
					SEGUNDO_NOMBRE,
					TELEFONO1,
					TELEFONO2,
					EXTENSION,
					CELULAR,
					EMAIL,
					DIRECCION,
					CIUDAD,
					DEPARTAMENTO,
					TIEMPO_CONOCIDO,
					PARENTESCO,
					RECORDPRESOLICITUDES.CREATION_DATE,
					_USERLOGIN AS CREATION_USER,
					'0099-01-01 00:00:00'::TIMESTAMP AS LAST_UPDATE,
					''::VARCHAR AS USER_UPDATE
				 FROM   SOLICITUD_REFERENCIAS
				 WHERE  NUMERO_SOLICITUD = _NUMEROSOLICITUDPADRE);

			--10.) INSERTAMOS LA SOLICITUD_VEHICULO
				INSERT INTO SOLICITUD_VEHICULO
					    (REG_STATUS,
					     DSTRCT,
					     NUMERO_SOLICITUD,
					     TIPO,
					     SECUENCIA,
					     MARCA,
					     TIPO_VEHICULO,
					     PLACA,
					     MODELO,
					     VALOR_COMERCIAL,
					     CUOTA_MENSUAL,
					     PIGNORADO_A_FAVOR_DE,
					     CREATION_DATE,
					     CREATION_USER,
					     LAST_UPDATE,
					     USER_UPDATE)
				(SELECT REG_STATUS,
					DSTRCT,
					NUEVONUMEROSOLICITUD,
					TIPO,
					SECUENCIA,
					MARCA,
					TIPO_VEHICULO,
					PLACA,
					MODELO,
					VALOR_COMERCIAL,
					CUOTA_MENSUAL,
					PIGNORADO_A_FAVOR_DE,
					RECORDPRESOLICITUDES.CREATION_DATE,
					_USERLOGIN AS CREATION_USER,
					'0099-01-01 00:00:00'::TIMESTAMP AS LAST_UPDATE,
					''::VARCHAR AS USER_UPDATE
				 FROM   SOLICITUD_VEHICULO
				 WHERE  NUMERO_SOLICITUD = _NUMEROSOLICITUDPADRE);

			--11.) GUARDAMOS LA LIQUIDACION DEL NEGOCIO

			INSERT INTO APICREDIT.PRE_LIQUIDACION_CREDITOS(
				    DSTRCT, NUMERO_SOLICITUD, FECHA, DIAS, CUOTA, SALDO_INICIAL,
				    CAPITAL, INTERES, CUSTODIA, SEGURO, REMESA, VALOR_CUOTA, SALDO_FINAL,
				    VALOR_AVAL,CUOTA_MANEJO, CREATION_USER, CREATION_DATE)
			SELECT 'FINV'::VARCHAR AS DSTRCT,
			        NUEVONUMEROSOLICITUD AS NUMERO_SOLICITUD,
				FECHA::DATE,
				DIAS,
				ITEM AS CUOTA,
				SALDO_INICIAL,
				CAPITAL,
				INTERES,
				CUSTODIA,
				SEGURO,
				REMESA,
				VALOR AS VALOR_CUOTA,
				SALDO_FINAL,
				COALESCE(VALOR_AVAL,0.00) AS VALOR_AVAL,
				CUOTA_MANEJO,
				_USERLOGIN AS CREATION_USER,
				NOW()::DATE AS CREATION_DATE
			 FROM  APICREDIT.EG_LIQUIDADOR_CREDITOS(RECORDPRESOLICITUDES.MONTO_CREDITO::NUMERIC,
								 RECORDPRESOLICITUDES.NUMERO_CUOTAS::INTEGER,
								 RECORDPRESOLICITUDES.FECHA_PAGO::DATE,
								 RECORDPRESOLICITUDES.ID_CONVENIO::INTEGER);


			--12.)ACTUALIZAMOS EL ESTADO DE LA PRESOLICITUD.
			UPDATE APICREDIT.PRE_SOLICITUDES_CREDITOS
			  SET ESTADO_SOL='P'
			WHERE NUMERO_SOLICITUD=NUEVONUMEROSOLICITUD
			AND REG_STATUS='' AND ESTADO_SOL='B';

			--13.)	CREAMOS EL NEGOCIO DEL NUEVO CREDITO
			RETORNO:= APICREDIT.EG_GENERAR_NEGOCIO_CREDITO(31,
								      NUEVONUMEROSOLICITUD::INTEGER,
								      _USERLOGIN::CHARACTER VARYING,
								      FALSE,
								      RECORDPRESOLICITUDES.ENTIDAD::CHARACTER VARYING,
								      'N', 'N', '{}'::TEXT[]);




			UPDATE APICREDIT.PRE_SOLICITUDES_CREDITOS SET ETAPA=4 ,EXTRACTO_ELECTRONICO='N', RECOGE_FIRMAS='N'
			WHERE NUMERO_SOLICITUD=NUEVONUMEROSOLICITUD;


		ELSE
			RETORNO:='ENTRAMITE';
		END IF;

	ELSE
		RETORNO:='NULL';
	END IF;

	RETURN RETORNO;

EXCEPTION
	WHEN UNIQUE_VIOLATION THEN
	RAISE EXCEPTION 'ERROR INSERTANDO EN LA BD, YA EXISTE EN LA BASE DE DATOS.';
	RETORNO='FAIL' ;
	RETURN RETORNO;


END;$BODY$
  LANGUAGE plpgsql VOLATILE;
ALTER FUNCTION apicredit.eg_clonar_solicitud_credito_fitra(integer, integer, character varying)
  OWNER TO postgres;
