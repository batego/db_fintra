-- Function: con.interfaz_sl_egreso_contratistas_fintra_apoteosys()

-- DROP FUNCTION con.interfaz_sl_egreso_contratistas_fintra_apoteosys();

CREATE OR REPLACE FUNCTION con.interfaz_sl_egreso_contratistas_fintra_apoteosys()
  RETURNS text AS
$BODY$

DECLARE
 /************************************************
  *DESCRIPCION:
  *AUTOR		:=		@BTERRAZA
  *FECHA CREACION	:=		2018-01-10
  *LAST_UPDATE		:=	 	2018-01-10
  *DESCRIPCION DE CAMBIOS Y FECHA
  ************************************************/


EGRESO_RECORD RECORD;
INFOITEMS_ RECORD;
INFOCLIENTE RECORD;
LONGITUD NUMERIC;
SECUENCIA_GEN INTEGER;
SECUENCIA_INT INTEGER:= 1;
CUENTAS_IVA VARCHAR[] := '{}';
FECHADOC_ VARCHAR:= '';
MCTYPE CON.TYPE_INSERT_MC;
SW TEXT:='N';
VALIDACIONES TEXT;
_EXISTE CHARACTER VARYING :='';


BEGIN

	--Paso 3 Dinamica Cxp Contratista Egreso
	FOR EGRESO_RECORD IN

			/*SELECT
				EGRE.PERIODO,
				CXP.HANDLE_CODE,
				EGRE.DOCUMENT_NO,
				CXP.CHEQUE,
				CXP.DOCUMENTO,
				EGDET.DESCRIPTION,
				CXP.TIPO_DOCUMENTO,
				EGRE.BRANCH_CODE AS BANCO,
				EGRE.BANK_ACCOUNT_NO AS SUCURSAL,
				EGRE.FECHA_CHEQUE AS FECHA_EGRESO,
				EGRE.CREATION_DATE::DATE,
				CXP.FECHA_VENCIMIENTO,
				CXP.PROVEEDOR AS NIT,
				EGDET.VLR,
				COALESCE(EGDET.PROCESADO,'N') AS PROCESADO
			FROM EGRESO EGRE
			INNER JOIN EGRESODET EGDET ON (EGRE.DOCUMENT_NO =EGDET.DOCUMENT_NO AND EGRE.BRANCH_CODE=EGDET.BRANCH_CODE
							 AND EGRE.BANK_ACCOUNT_NO=EGDET.BANK_ACCOUNT_NO)
			INNER  JOIN FIN.CXP_DOC  CXP  ON (CXP.REG_STATUS = '' AND CXP.HANDLE_CODE = 'CD' AND CXP.TIPO_DOCUMENTO = 'FAP' AND CXP.PROVEEDOR=EGRE.NIT_PROVEEDOR
								AND  CXP.BANCO = EGDET.BRANCH_CODE AND CXP.SUCURSAL = EGDET.BANK_ACCOUNT_NO
									AND CXP.DOCUMENTO=EGDET.DOCUMENTO AND CXP.TIPO_DOCUMENTO=EGDET.TIPO_DOCUMENTO  )
			INNER  JOIN PROVEEDOR PRV ON (CXP.PROVEEDOR = PRV.NIT)
			WHERE
			CXP.DESCRIPCION = 'CXP CONTRATISTA'
			AND  EGRE.PERIODO = REPLACE(SUBSTRING(NOW(),1,7),'-','')
			AND SUBSTRING(EGRE.DOCUMENT_NO,1,2) ='BC'
			AND EGRE.REG_STATUS=''
			AND EGDET.REG_STATUS=''
			AND COALESCE(EGDET.PROCESADO,'N')='N'
			--AND EGRE.DOCUMENT_NO = 'BC13449'
			ORDER BY DOCUMENT_NO*/
	
			
			SELECT 
				EGRE.PERIODO, 
				CXP.HANDLE_CODE,
				EGRE.DOCUMENT_NO,
				CXP.CHEQUE,
				CXP.DOCUMENTO,
				EGDET.DESCRIPTION,
				CXP.TIPO_DOCUMENTO,
				EGRE.BRANCH_CODE AS BANCO,
				EGRE.BANK_ACCOUNT_NO AS SUCURSAL,
				EGRE.FECHA_CHEQUE AS FECHA_EGRESO,
				EGRE.CREATION_DATE::DATE,
				CXP.FECHA_VENCIMIENTO,
				CXP.PROVEEDOR AS NIT,	
				EGDET.VLR
				--COALESCE(EGDET.PROCESADO,'N') AS PROCESADO	
			FROM EGRESO EGRE
			INNER JOIN EGRESODET EGDET ON (EGRE.DOCUMENT_NO =EGDET.DOCUMENT_NO AND EGRE.BRANCH_CODE=EGDET.BRANCH_CODE 
							 AND EGRE.BANK_ACCOUNT_NO=EGDET.BANK_ACCOUNT_NO)
			INNER  JOIN FIN.CXP_DOC  CXP  ON (CXP.REG_STATUS = '' AND CXP.HANDLE_CODE = 'CD' AND CXP.TIPO_DOCUMENTO = 'FAP' AND CXP.PROVEEDOR=EGRE.NIT_PROVEEDOR
								AND  CXP.BANCO = EGDET.BRANCH_CODE AND CXP.SUCURSAL = EGDET.BANK_ACCOUNT_NO 
									AND CXP.DOCUMENTO=EGDET.DOCUMENTO AND CXP.TIPO_DOCUMENTO=EGDET.TIPO_DOCUMENTO  )
			INNER JOIN FIN.CXP_ITEMS_DOC	AS B	ON (CXP.DOCUMENTO = B.DOCUMENTO AND CXP.TIPO_DOCUMENTO = B.TIPO_DOCUMENTO)	
			LEFT JOIN opav_bkp.acciones_view_dblink 	AS ACC	ON (B.REFERENCIA_1 = ACC.ID_ACCION)
			LEFT JOIN opav_bkp.ofertas_view_dblink 	AS C	ON (ACC.ID_SOLICITUD = C.ID_SOLICITUD)
			INNER  JOIN PROVEEDOR PRV ON (CXP.PROVEEDOR = PRV.NIT)
			WHERE 
			CXP.DESCRIPCION = 'CXP CONTRATISTA'
			AND  EGRE.PERIODO = REPLACE(SUBSTRING(NOW(),1,7),'-','')	
			AND SUBSTRING(EGRE.DOCUMENT_NO,1,2) ='BC'
			AND EGRE.REG_STATUS=''
			AND EGDET.REG_STATUS=''
			AND COALESCE(EGDET.PROCESADO,'N')='N'
			AND TIPO_PROYECTO !='TPR00006'
			--AND EGRE.DOCUMENT_NO = 'BC13449'
			GROUP BY
				EGRE.PERIODO, 
				CXP.HANDLE_CODE,
				EGRE.DOCUMENT_NO,
				CXP.CHEQUE,
				CXP.DOCUMENTO,
				EGDET.DESCRIPTION,
				CXP.TIPO_DOCUMENTO,
				EGRE.BRANCH_CODE,
				EGRE.BANK_ACCOUNT_NO,
				EGRE.FECHA_CHEQUE,
				EGRE.CREATION_DATE::DATE,
				CXP.FECHA_VENCIMIENTO,
				CXP.PROVEEDOR,	
				EGDET.VLR
	
/**
SELECT con.interfaz_sl_egreso_contratistas_fintra_apoteosys();
SELECT * FROM con.mc_doc_cxp_cont_fin where MC_____CODIGO____CD_____B='EGRC' and MC_____NUMERO____PERIOD_B=2;
DELETE FROM con.mc_doc_cxp_cont_fin where MC_____CODIGO____CD_____B='EGRC' and MC_____NUMERO____PERIOD_B>=3;
SELECT * FROM fin.cxp_doc where documento='EYPLS-05-16'
select * from egresodet where documento='EYPLS-05-16' document_no='BC7499'
*/

	LOOP

		SELECT INTO INFOCLIENTE
			'NIT' AS TIPO_DOC,
			(CASE
			WHEN GRAN_CONTRIBUYENTE ='N' AND AGENTE_RETENEDOR ='N' THEN 'RCOM'
			WHEN GRAN_CONTRIBUYENTE ='N' AND AGENTE_RETENEDOR ='S' THEN 'RCAU'
			WHEN GRAN_CONTRIBUYENTE ='S' AND AGENTE_RETENEDOR ='N' THEN 'GCON'
			WHEN GRAN_CONTRIBUYENTE ='S' AND AGENTE_RETENEDOR ='S' THEN 'GCAU'
			ELSE 'PNAL' END) AS CODIGO,
			'08001'AS CODIGOCIU,
			(D.NOMBRE1||' '||D.NOMBRE2) AS NOMBRE_CORTO,
			PAYMENT_NAME AS  NOMBRE,
			(D.APELLIDO1||' '||D.APELLIDO2) AS APELLIDOS,
			DIRECCION,
			TELEFONO
		FROM PROVEEDOR PROV
		LEFT JOIN NIT D ON(D.CEDULA=PROV.NIT)
		LEFT JOIN CIUDAD E ON(E.CODCIU=D.CODCIU)
		WHERE NIT =  EGRESO_RECORD.NIT;

		----SECUENCIA GENERAL
		SELECT INTO SECUENCIA_GEN  NEXTVAL('CON.INTERFAZ_SECUENCIA_EGRESO_APOTEOSYS');

		MCTYPE.MC_____CODIGO____CONTAB_B := 'FINT';
		MCTYPE.MC_____CODIGO____TD_____B := 'EGRN';
		MCTYPE.MC_____CODIGO____CD_____B := 'EGRC';
		MCTYPE.MC_____NUMERO____B := SECUENCIA_GEN; --SECUENCIA GENERAL
		SECUENCIA_INT:=1;

		/**BUSCAMOS LA INFORMACION COMPLETA QUE CONFORMARA EL ASIENTO CONTABLE PARA MANDARLO A APOTEOSYS*/

		FOR INFOITEMS_ IN

					SELECT
						EGREDET.TIPO_DOCUMENTO,
						CMC.CUENTA AS CUENTA,
						CASE WHEN EGREDET.VLR>0 THEN EGREDET.VLR ELSE 0 END AS  VALOR_DEB ,
						CASE WHEN EGREDET.VLR<0 THEN EGREDET.VLR*-1 ELSE 0 END AS VALOR_CREDT,
						EGREDET.DESCRIPTION AS DESCRIPCION,
						EGREDET.DOCUMENTO AS DOCUMENTO
					FROM EGRESODET AS EGREDET
					INNER JOIN CON.CMC_DOC AS CMC ON (CMC.TIPODOC = EGREDET.TIPO_DOCUMENTO AND EGRESO_RECORD.HANDLE_CODE=CMC.CMC)
					WHERE EGREDET.DOCUMENTO = EGRESO_RECORD.DOCUMENTO --'242016'   --
					 AND EGREDET.DOCUMENT_NO = EGRESO_RECORD.DOCUMENT_NO   --'BC13449' --
					 AND EGREDET.TIPO_DOCUMENTO = 'FAP'
					 AND EGREDET.BRANCH_CODE = EGRESO_RECORD.BANCO        --'BANCOLOMBIA' --
					 AND EGREDET.BANK_ACCOUNT_NO = EGRESO_RECORD.SUCURSAL --'CC' 	 --

					UNION ALL

					SELECT
						EGREDET.TIPO_DOCUMENTO,
						COALESCE((SELECT CODIGO_CUENTA FROM BANCO  WHERE BRANCH_CODE = EGREDET.BRANCH_CODE AND BANK_ACCOUNT_NO = EGREDET.BANK_ACCOUNT_NO),'00000000') AS CUENTA,
						CASE WHEN EGREDET.VLR<0 THEN EGREDET.VLR*-1 ELSE 0 END AS VALOR_DEB,
						CASE WHEN EGREDET.VLR>0 THEN EGREDET.VLR ELSE 0 END AS  VALOR_CREDT,
						'BANCOS'::TEXT AS DESCRIPCION,
						EGREDET.DOCUMENT_NO AS DOCUMENTO
					FROM EGRESODET AS EGREDET
					WHERE EGREDET.DOCUMENTO = EGRESO_RECORD.DOCUMENTO --'242016'   --
					 AND EGREDET.DOCUMENT_NO =EGRESO_RECORD.DOCUMENT_NO   --'BC13449' --
					 AND EGREDET.TIPO_DOCUMENTO = 'FAP'
					 AND EGREDET.BRANCH_CODE = EGRESO_RECORD.BANCO  --'BANCOLOMBIA' --
					 AND EGREDET.BANK_ACCOUNT_NO = EGRESO_RECORD.SUCURSAL --'CC'      --

			LOOP


			IF(CON.OBTENER_HOMOLOGACION_APOTEOSYS('EGR_FIN_C','FAP', INFOITEMS_.CUENTA,'', 6)='S')THEN
				MCTYPE.MC_____FECHVENC__B = EGRESO_RECORD.FECHA_EGRESO; --FECHA VENCIMIENTO
					IF (EGRESO_RECORD.FECHA_VENCIMIENTO < EGRESO_RECORD.FECHA_EGRESO)THEN /** SE VALIDA SI LA FECHA DE VENCIMEINTO ES MENOR A LA DE CREACION*/
						MCTYPE.MC_____FECHEMIS__B = EGRESO_RECORD.FECHA_EGRESO; --FECHA CREACION
					ELSE
						MCTYPE.MC_____FECHEMIS__B = EGRESO_RECORD.FECHA_EGRESO; --FECHA CREACION
					END IF;
			ELSE
				MCTYPE.MC_____FECHEMIS__B='0099-01-01 00:00:00';
				MCTYPE.MC_____FECHVENC__B='0099-01-01 00:00:00';
			END IF;


			FECHADOC_ := CASE WHEN REPLACE(SUBSTRING(EGRESO_RECORD.FECHA_EGRESO,1,7),'-','') = EGRESO_RECORD.PERIODO THEN EGRESO_RECORD.FECHA_EGRESO::DATE ELSE CON.SP_FECHA_CORTE_MES(SUBSTRING(EGRESO_RECORD.PERIODO,1,4), SUBSTRING(EGRESO_RECORD.PERIODO,5,2)::INT)::DATE END;
			MCTYPE.MC_____FECHA_____B := CASE WHEN (EGRESO_RECORD.FECHA_EGRESO::DATE > FECHADOC_::DATE AND REPLACE(SUBSTRING(EGRESO_RECORD.FECHA_EGRESO,1,7),'-','') = EGRESO_RECORD.PERIODO)  THEN EGRESO_RECORD.FECHA_EGRESO::DATE ELSE FECHADOC_::DATE END;
			MCTYPE.MC_____SECUINTE__DCD____B := SECUENCIA_INT;--SECUENCIA INTERNA
			MCTYPE.MC_____SECUINTE__B := SECUENCIA_INT;--SECUENCIA INTERNA
			MCTYPE.MC_____REFERENCI_B := '-';--EGRESO_RECORD.DOCUMENT_NO;  --'-'; --INFOITEMS_.NUM_OS; ---CAMBIAR A MULTISERVICIO...
			MCTYPE.MC_____CODIGO____PF_____B := SUBSTRING( EGRESO_RECORD.PERIODO,1,4)::INT;
			MCTYPE.MC_____NUMERO____PERIOD_B := SUBSTRING( EGRESO_RECORD.PERIODO,5,2)::INT;
			MCTYPE.MC_____CODIGO____PC_____B :=  'PUCF';
			MCTYPE.MC_____CODIGO____CPC____B := CON.OBTENER_HOMOLOGACION_APOTEOSYS('EGR_FIN_C', 'FAP', INFOITEMS_.CUENTA,'', 1);
			MCTYPE.MC_____CODIGO____CU_____B := CON.OBTENER_HOMOLOGACION_APOTEOSYS('EGR_FIN_C', 'FAP', INFOITEMS_.CUENTA,'', 2);
			MCTYPE.MC_____IDENTIFIC_TERCER_B := SUBSTRING(REPLACE(EGRESO_RECORD.NIT,'-',''),1,9);
			MCTYPE.MC_____DEBMONORI_B := 0;
			MCTYPE.MC_____CREMONORI_B := 0;
			MCTYPE.MC_____DEBMONLOC_B := INFOITEMS_.VALOR_DEB::NUMERIC;
			MCTYPE.MC_____CREMONLOC_B := INFOITEMS_.VALOR_CREDT::NUMERIC;
			MCTYPE.MC_____INDTIPMOV_B := 4;
			MCTYPE.MC_____INDMOVREV_B := 'N';
			MCTYPE.MC_____OBSERVACI_B := INFOITEMS_.DESCRIPCION; --SUBSTRING((INFOITEMS_.NUM_OS ||' : '||INFOITEMS_.DESCRIPCION),1,249);
			MCTYPE.MC_____FECHORCRE_B := EGRESO_RECORD.FECHA_EGRESO::TIMESTAMP;
			MCTYPE.MC_____AUTOCREA__B := 'ADMIN';
			MCTYPE.MC_____FEHOULMO__B := EGRESO_RECORD.FECHA_EGRESO::TIMESTAMP;
			MCTYPE.MC_____AUTULTMOD_B := '';
			MCTYPE.MC_____VALIMPCON_B := 0;
			MCTYPE.MC_____NUMERO_OPER_B := '';
			MCTYPE.TERCER_CODIGO____TIT____B := INFOCLIENTE.TIPO_DOC;
			MCTYPE.TERCER_NOMBCORT__B := SUBSTRING(INFOCLIENTE.NOMBRE_CORTO,1,32);
			MCTYPE.TERCER_NOMBEXTE__B := SUBSTRING(INFOCLIENTE.NOMBRE,1,64);
			MCTYPE.TERCER_APELLIDOS_B := INFOCLIENTE.APELLIDOS;
			MCTYPE.TERCER_CODIGO____TT_____B := INFOCLIENTE.CODIGO;
			MCTYPE.TERCER_DIRECCION_B := CASE WHEN CHAR_LENGTH(INFOCLIENTE.DIRECCION)>64 THEN SUBSTR(INFOCLIENTE.DIRECCION,1,64) ELSE INFOCLIENTE.DIRECCION END;
			MCTYPE.TERCER_CODIGO____CIUDAD_B := INFOCLIENTE.CODIGOCIU;
			MCTYPE.TERCER_TELEFONO1_B := CASE WHEN CHAR_LENGTH(INFOCLIENTE.TELEFONO)>15 THEN SUBSTR(INFOCLIENTE.TELEFONO,1,15) ELSE INFOCLIENTE.TELEFONO END;
			MCTYPE.TERCER_TIPOGIRO__B := 1;
			MCTYPE.TERCER_CODIGO____EF_____B := '';
			MCTYPE.TERCER_SUCURSAL__B := '';
			MCTYPE.TERCER_NUMECUEN__B := '';
			MCTYPE.MC_____CODIGO____DS_____B := CON.OBTENER_HOMOLOGACION_APOTEOSYS('EGR_FIN_C','FAP', INFOITEMS_.CUENTA,'', 3);
			MCTYPE.MC_____BASE______B:=0;

			IF(MCTYPE.MC_____FECHEMIS__B > MCTYPE.MC_____FECHA_____B) THEN
				MCTYPE.MC_____FECHEMIS__B :=  MCTYPE.MC_____FECHA_____B;
			END IF;

			--
			IF(INFOITEMS_.CUENTA = ANY (CUENTAS_IVA))THEN
				IF(INFOITEMS_.VALOR_CREDT>0) THEN
					MCTYPE.MC_____BASE______B:= INFOITEMS_.VALOR_CREDT/0.16;
				ELSE
					MCTYPE.MC_____BASE______B:= INFOITEMS_.VALOR_DEB/0.16;
				END IF;
			END IF;

			MCTYPE.MC_____NUMDOCSOP_B := INFOITEMS_.DOCUMENTO;

			-- IF(CON.OBTENER_HOMOLOGACION_APOTEOSYS('CXP_SEL','NC', INFOITEMS_.CUENTA,'', 4)='S')THEN
-- 				MCTYPE.MC_____NUMDOCSOP_B := EGRESO_RECORD.DOCUMENTO;
-- 			ELSE
-- 				MCTYPE.MC_____NUMDOCSOP_B := '';
-- 			END IF;

			IF(CON.OBTENER_HOMOLOGACION_APOTEOSYS('EGR_FIN_C', 'FAP', INFOITEMS_.CUENTA,'', 5)::INT=1)THEN
				MCTYPE.MC_____NUMEVENC__B := 1;--NUMERO DE CUOTAS
			ELSE
				MCTYPE.MC_____NUMEVENC__B := NULL;
			END IF;


			RAISE NOTICE 'NC ====>>>> %',INFOITEMS_.CUENTA;
			SW:=CON.SP_INSERT_TABLE_MC_DOC_CXP_CONT_FINTRA(MCTYPE);
			SECUENCIA_INT :=SECUENCIA_INT+1;

		END LOOP;

		RAISE NOTICE '<<<<==== TERMINO ====>>>> %',EGRESO_RECORD.DOCUMENTO;

		--VALIDAMOS VALORES DEBITOS Y CREDITOS DEL COMPROBANTE A TRASLADAR.
		IF CON.SP_VALIDACIONES(MCTYPE,'FAC_CC') = 'N' THEN
			SW = 'N';
			CONTINUE;
		END IF;

		IF(SW = 'S')THEN

			UPDATE
				EGRESODET
			SET
				PROCESADO='S'
			WHERE
				DOCUMENT_NO = EGRESO_RECORD.DOCUMENT_NO AND
				BRANCH_CODE = EGRESO_RECORD.BANCO AND
				BANK_ACCOUNT_NO = EGRESO_RECORD.SUCURSAL AND
				DOCUMENTO = EGRESO_RECORD.DOCUMENTO AND
				TIPO_DOCUMENTO = EGRESO_RECORD.TIPO_DOCUMENTO;

		END IF;

	END LOOP;

RETURN 'OK';

END
$BODY$
  LANGUAGE plpgsql VOLATILE;
ALTER FUNCTION con.interfaz_sl_egreso_contratistas_fintra_apoteosys()
  OWNER TO postgres;
