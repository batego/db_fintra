-- Function: con.interfaz_fintra_logistica_apoteosys_prontopago()

-- DROP FUNCTION con.interfaz_fintra_logistica_apoteosys_prontopago();

CREATE OR REPLACE FUNCTION con.interfaz_fintra_logistica_apoteosys_prontopago()
  RETURNS text AS
$BODY$

DECLARE

 /************************************************
  *DESCRIPCION: ESTA FUNCION TOMA LAS ORDENES DE SERVICIO Y
  *OBTIENE LOS ANTICIPOS POR PRONTOPAGO Y CONTRUYE EL ASIENTO
  *CONTABLE QUE MAS ADELANTE SE TRASLADARA A APOTEOSYS.
  *DOCUMENTACION:= EL ARRAY _ARRCUENTASAET HACE REFERENCIA A LAS CUENTAS PARA
  *REALIZAR LA VERIFICACION DE LAS TRANSACCIONES ASI:
  *EXT:=I010020024163, FAP:=22050301, FAC:=13802602.
  *AUTOR:=@JZAPATA
  *FECHA CREACION:=2017-05-19
  *LAST_UPDATE
  *DESCRIPCION DE CAMBIOS Y FECHA
  ************************************************/


 REC_OS RECORD;
 REC_EXT RECORD;
 REC_EGR RECORD;
 SECUENCIA_EXT INTEGER;
 SECUENCIA_EG INTEGER;
 CONSEC INTEGER:=1;
 PLANILLA_ TEXT:='';
 FECHADOC_ TEXT:='';
 SW TEXT:='N';
 _ARRCUENTASAET VARCHAR[] :='{I010020024163,22050301,13802602}';--IDEAL UN TABLA OJO!!
_ARRAYFACTURAS VARCHAR[];
 MCTYPE CON.TYPE_INSERT_MC;
 CADENA_ TEXT:= '';
FECHA_EMISION_CXP_ TEXT := '';
FECHA_VENCIMIENTO_CXP_ TEXT := '';
FECHA_EMISION_CXC_ TEXT := '';
FECHA_VENCIMIENTO_CXC_ TEXT := '';

BEGIN

--SE CONSULTAN LOS REGISTROS QUE SE VAN A TRANSPORTAR PARA TRANSFERENCIAS

	FOR REC_OS IN

		SELECT A.NUMERO_OPERACION,
			A.CREATION_DATE,
			A.FACTURA_CXP,
			CON.INTERFAZ_FINTRA_LOGISTICA_APOTEOSYS_CADENA(A.NUMERO_OPERACION, A.PERIODO_OS) AS CADENA,
			A.EGRESO,
			B.FECHADOC,
			A.TIPO_OPERACION,
			A.PROVEEDOR,
			A.PROCESADO
		FROM
			FIN.ORDEN_SERVICIO A
		INNER JOIN
			CON.COMPROBANTE B ON(B.DSTRCT=A.DSTRCT AND B.TIPODOC='EGR' AND B.NUMDOC=A.EGRESO)
		WHERE
			A.REG_STATUS!='A' AND
			A.DSTRCT='FINV' AND
			A.TIPO_OPERACION ='EXT' AND
			A.GRUPO_TRANSACCION_OS!=0 AND
			A.PERIODO_OS!='' AND
			A.FECHA_CONTABILIZACION_OS::DATE >= '2014-01-01'
			and A.PERIODO_OS =REPLACE(SUBSTRING(CURRENT_DATE,1,7),'-','')
			AND A.PROCESADO = 'N'
			 GROUP BY A.NUMERO_OPERACION, A.CREATION_DATE, A.FACTURA_CXP, A.PERIODO_OS, A.EGRESO, B.FECHADOC, A.TIPO_OPERACION, A.PROVEEDOR, A.PROCESADO
			 ORDER BY A.NUMERO_OPERACION

	LOOP
			--------------------------------------------------------------------------------------------------------------------------------------------
			--SE CONSULTA LA TRANSACCION
			--TIPODOC FAC Y CUENTA 13802602, PRONTOPAGO
			--TIPODOC AET Y CUENTA I010020024163, PRONTOPAGO
			--TIPODOC FAP Y CUENTA 22050301, PRONTOPAGO

			--raise notice 'cadena:%',CADENA_;
			FECHA_EMISION_CXP_ := REC_OS.CADENA[2];
			FECHA_VENCIMIENTO_CXP_ := REC_OS.CADENA[3];
			FECHA_EMISION_CXC_ := REC_OS.CADENA[4];
			FECHA_VENCIMIENTO_CXC_ := REC_OS.CADENA[5];
			SECUENCIA_EXT:=0;
			SECUENCIA_EG:=0;
			PLANILLA_:='';
			CONSEC :=1;

			IF(FECHA_EMISION_CXP_!='')THEN

				--SECUENCIA DE LA TRANSACCION
				SELECT INTO SECUENCIA_EXT NEXTVAL('CON.INTERFAZ_SECUENCIA_OPER_APOTEOSYS');
				--SECUENCIA DEL EGRESO
				SELECT INTO SECUENCIA_EG NEXTVAL('CON.INTERFAZ_SECUENCIA_EGRESO_APOTEOSYS');

				--CONSULTAMOS LA PLANILLA DE LA ORDEN DE SERVICIO PARA UTILIZARLO COMO REFERENCIA
				SELECT
					INTO PLANILLA_ PLANILLA
				FROM
					FIN.ANTICIPOS_PAGOS_TERCEROS
				WHERE
					TIPO_OPERACION='EXT' AND
					NUMERO_OPERACION=REC_OS.NUMERO_OPERACION;

			 _ARRAYFACTURAS:= (SELECT  ARRAY ((SELECT B.FACTURA_CXC FROM
					FIN.ORDEN_SERVICIO A
					INNER JOIN FIN.ORDEN_SERVICIO_DETALLE B
					ON(B.DSTRCT=A.DSTRCT AND B.TIPO_OPERACION=A.TIPO_OPERACION AND B.NUMERO_OPERACION=A.NUMERO_OPERACION)
					WHERE A.NUMERO_OPERACION=REC_OS.NUMERO_OPERACION AND A.TIPO_OPERACION='EXT'))::VARCHAR[]);
				--SE CONSTRUYE EL ASIENTO POR EL NUMERO DE LA OPERACION
				FOR REC_EXT IN

					SELECT
					 B.TIPODOC,
					 B.GRUPO_TRANSACCION,
					 B.PERIODO,
					 B.CUENTA,
					 CASE WHEN HT.NIT_APOTEOSYS IS NOT NULL THEN HT.NIT_APOTEOSYS ELSE A.TERCERO END AS TERCERO,
					 B.VALOR_DEBITO,
					 B.VALOR_CREDITO,
					 B.DETALLE,
					 B.CREATION_DATE,
					 B.CREATION_USER,
					 B.LAST_UPDATE,
					 B.USER_UPDATE,
					 (CASE
					 WHEN D.TIPO_IDEN='CED' THEN 'CC'
					 WHEN D.TIPO_IDEN='RIF' THEN 'CE'
					 WHEN D.TIPO_IDEN='NIT' THEN 'NIT' ELSE
					 'CC' END) AS TERCER_CODIGO____TIT____B,
					 C.DIGITO_VERIFICACION AS TERCER_DIGICHEQ__B,
					 (D.NOMBRE1||' '||D.NOMBRE2) AS TERCER_NOMBCORT__B,
					 (D.APELLIDO1||' '||D.APELLIDO2) AS TERCER_APELLIDOS_B,
					 D.NOMBRE AS TERCER_NOMBEXTE__B,
					 (CASE
					 WHEN C.GRAN_CONTRIBUYENTE='N' AND C.AGENTE_RETENEDOR='N' THEN 'RCOM'
					 WHEN C.GRAN_CONTRIBUYENTE='N' AND C.AGENTE_RETENEDOR='S' THEN 'RCAU'
					 WHEN C.GRAN_CONTRIBUYENTE='S' AND C.AGENTE_RETENEDOR='N' THEN 'GCON'
					 WHEN C.GRAN_CONTRIBUYENTE='S' AND C.AGENTE_RETENEDOR='S' THEN 'GCAU'
					 ELSE 'PNAL' END) AS TERCER_CODIGO____TT_____B,
					 D.DIRECCION AS TERCER_DIRECCION_B,
					 (CASE
					 WHEN E.CODIGO_DANE2!='' THEN E.CODIGO_DANE2
					 ELSE '08001' END) AS TERCER_CODIGO____CIUDAD_B,
					 D.TELEFONO AS TERCER_TELEFONO1_B
					FROM
					 CON.COMPROBANTE A
					INNER JOIN CON.COMPRODET B ON(B.DSTRCT=A.DSTRCT AND B.TIPODOC=A.TIPODOC AND B.NUMDOC=A.NUMDOC AND B.GRUPO_TRANSACCION=A.GRUPO_TRANSACCION)
					LEFT JOIN PROVEEDOR C ON(C.DSTRCT=A.DSTRCT AND C.NIT=A.TERCERO)
					LEFT JOIN NIT D ON(D.CEDULA=C.NIT)
					LEFT JOIN CIUDAD E ON(E.CODCIU=D.CODCIU)
					LEFT JOIN CON.HOMOLOGA_TERCEROS HT ON(TRIM(HT.NIT_FINTRA)=TRIM(A.TERCERO))
					WHERE
					 A.DSTRCT='FINV' AND
					 ((A.TIPODOC, A.NUMDOC, CUENTA) =('EXT',REC_OS.NUMERO_OPERACION, _ARRCUENTASAET[1]) OR
					(A.TIPODOC, A.NUMDOC, CUENTA) =('FAP',REC_OS.FACTURA_CXP,_ARRCUENTASAET[2]) OR
					(A.TIPODOC='FAC' AND A.NUMDOC = ANY (_ARRAYFACTURAS) AND B.CUENTA =_ARRCUENTASAET[3]))
					order by valor_debito desc,tipodoc

				LOOP

					FECHADOC_ := CASE WHEN REPLACE(SUBSTRING(REC_OS.CREATION_DATE,1,7),'-','')=REC_EXT.PERIODO THEN REC_OS.CREATION_DATE::DATE ELSE con.sp_fecha_corte_mes(SUBSTRING(REC_EXT.PERIODO,1,4),SUBSTRING(REC_EXT.PERIODO,5,2)::INT)::DATE END ;

					FECHADOC_ := CASE WHEN FECHADOC_::DATE<'2016-12-01'::DATE THEN '2016-12-31'::DATE ELSE FECHADOC_::DATE END;

					--MCTYPE:=REC_EXT;
					if(CON.OBTENER_HOMOLOGACION_APOTEOSYS('PRONTOPAGO', REC_EXT.TIPODOC, REC_EXT.CUENTA,'', 6)='S')then
						MCTYPE.MC_____FECHEMIS__B=FECHADOC_;
						MCTYPE.MC_____FECHVENC__B=FECHADOC_;
					else
						MCTYPE.MC_____FECHEMIS__B='0099-01-01 00:00:00';
						MCTYPE.MC_____FECHVENC__B='0099-01-01 00:00:00';

					end if;

					if( CON.OBTENER_HOMOLOGACION_APOTEOSYS('PRONTOPAGO', REC_EXT.TIPODOC, REC_EXT.CUENTA,'', 6)='S')then
						MCTYPE.MC_____FECHEMIS__B=FECHADOC_;
						MCTYPE.MC_____FECHVENC__B=FECHADOC_;
					else
						MCTYPE.MC_____FECHEMIS__B='0099-01-01 00:00:00';
						MCTYPE.MC_____FECHVENC__B='0099-01-01 00:00:00';
					end if;

					FECHADOC_ := CASE WHEN REPLACE(SUBSTRING(REC_OS.CREATION_DATE,1,7),'-','')=REC_EXT.PERIODO THEN REC_OS.CREATION_DATE::DATE ELSE con.sp_fecha_corte_mes(SUBSTRING(REC_EXT.PERIODO,1,4),SUBSTRING(REC_EXT.PERIODO,5,2)::INT)::DATE END ;

					FECHADOC_ := CASE WHEN FECHADOC_::DATE<'2016-12-01'::DATE THEN '2016-12-31'::DATE ELSE FECHADOC_::DATE END;

					MCTYPE.MC_____CODIGO____CONTAB_B := 'FINT' ;
					MCTYPE.MC_____CODIGO____TD_____B := 'OPER' ;
					MCTYPE.MC_____CODIGO____CD_____B := 'EXT'  ;
					MCTYPE.MC_____SECUINTE__DCD____B := CONSEC  ;
					MCTYPE.MC_____FECHA_____B := CASE WHEN (REC_OS.CREATION_DATE::DATE > FECHADOC_::DATE AND REPLACE(SUBSTRING(REC_OS.CREATION_DATE,1,7),'-','')=REC_EXT.PERIODO)  THEN REC_OS.CREATION_DATE::DATE ELSE FECHADOC_::DATE END;
					--MCTYPE.MC_____FECHA_____B := REC_OS.CREATION_DATE::DATE  ;
					MCTYPE.MC_____NUMERO____B := SECUENCIA_EXT  ;
					MCTYPE.MC_____SECUINTE__B := CONSEC  ;
					MCTYPE.MC_____REFERENCI_B := REC_OS.NUMERO_OPERACION  ;
					MCTYPE.MC_____CODIGO____PF_____B := CASE WHEN REC_EXT.PERIODO::INT<201612 THEN 2016 ELSE SUBSTRING(REC_EXT.PERIODO,1,4)::INT END  ;
					MCTYPE.MC_____NUMERO____PERIOD_B := CASE WHEN REC_EXT.PERIODO::INT<201612 THEN 12 ELSE SUBSTRING(REC_EXT.PERIODO,5,2)::INT END  ;
					MCTYPE.MC_____CODIGO____PC_____B :=  'PUCF' ;
					MCTYPE.MC_____CODIGO____CPC____B := CON.OBTENER_HOMOLOGACION_APOTEOSYS('PRONTOPAGO', REC_EXT.TIPODOC, REC_EXT.CUENTA,'', 1)  ;
					MCTYPE.MC_____CODIGO____CU_____B := CON.OBTENER_HOMOLOGACION_APOTEOSYS('PRONTOPAGO', REC_EXT.TIPODOC, REC_EXT.CUENTA,'', 2)  ;
					MCTYPE.MC_____IDENTIFIC_TERCER_B :=  CASE WHEN CHAR_LENGTH(REC_EXT.TERCERO)>10 THEN SUBSTR(REC_EXT.TERCERO,1,10) ELSE REC_EXT.TERCERO END;
					MCTYPE.MC_____DEBMONORI_B := 0  ;
					MCTYPE.MC_____CREMONORI_B := 0 ;
					MCTYPE.MC_____DEBMONLOC_B := REC_EXT.VALOR_DEBITO::NUMERIC  ;
					MCTYPE.MC_____CREMONLOC_B := REC_EXT.VALOR_CREDITO::NUMERIC  ;
					MCTYPE.MC_____INDTIPMOV_B := 4  ;
					MCTYPE.MC_____INDMOVREV_B := 'N'  ;
					MCTYPE.MC_____OBSERVACI_B := REC_EXT.DETALLE  ;
					MCTYPE.MC_____FECHORCRE_B := REC_EXT.CREATION_DATE::TIMESTAMP  ;
					MCTYPE.MC_____AUTOCREA__B := 'ADMIN'  ;
					MCTYPE.MC_____FEHOULMO__B := REC_EXT.LAST_UPDATE::TIMESTAMP  ;
					MCTYPE.MC_____AUTULTMOD_B := ''  ;
					MCTYPE.MC_____VALIMPCON_B := 0  ;
					MCTYPE.MC_____NUMERO_OPER_B := REC_OS.NUMERO_OPERACION;
					MCTYPE.TERCER_CODIGO____TIT____B := REC_EXT.TERCER_CODIGO____TIT____B  ;
					MCTYPE.TERCER_NOMBCORT__B := SUBSTR(REC_EXT.TERCER_NOMBCORT__B,1,32)  ;
					MCTYPE.TERCER_NOMBEXTE__B := SUBSTR(REC_EXT.TERCER_NOMBEXTE__B,1,64)  ;
					MCTYPE.TERCER_APELLIDOS_B := SUBSTR(REC_EXT.TERCER_APELLIDOS_B,1,32)  ;
					MCTYPE.TERCER_CODIGO____TT_____B := REC_EXT.TERCER_CODIGO____TT_____B  ;
					MCTYPE.TERCER_DIRECCION_B := SUBSTR(REC_EXT.TERCER_DIRECCION_B,1,64)  ;
					MCTYPE.TERCER_CODIGO____CIUDAD_B := REC_EXT.TERCER_CODIGO____CIUDAD_B  ;
					MCTYPE.TERCER_TELEFONO1_B := CASE WHEN CHAR_LENGTH(REC_EXT.TERCER_TELEFONO1_B)>15 THEN SUBSTR(REC_EXT.TERCER_TELEFONO1_B,1,15) ELSE REC_EXT.TERCER_TELEFONO1_B END;
					MCTYPE.TERCER_TIPOGIRO__B := 1 ;
					MCTYPE.TERCER_CODIGO____EF_____B := ''  ;
					MCTYPE.TERCER_SUCURSAL__B := ''  ;
					MCTYPE.TERCER_NUMECUEN__B := ''  ;
					MCTYPE.MC_____CODIGO____DS_____B := CON.OBTENER_HOMOLOGACION_APOTEOSYS('PRONTOPAGO', REC_EXT.TIPODOC, REC_EXT.CUENTA,'', 3);
					MCTYPE.MC_____NUMDOCSOP_B := REC_OS.NUMERO_OPERACION;
					MCTYPE.MC_____NUMEVENC__B := CON.OBTENER_HOMOLOGACION_APOTEOSYS('PRONTOPAGO', REC_EXT.TIPODOC, REC_EXT.CUENTA,'', 5)::INT;

					if(CON.OBTENER_HOMOLOGACION_APOTEOSYS('PRONTOPAGO', REC_EXT.TIPODOC, REC_EXT.CUENTA,'', 4)='S')then
						MCTYPE.MC_____NUMDOCSOP_B := REC_OS.NUMERO_OPERACION;
					else
						MCTYPE.MC_____NUMDOCSOP_B := '';
					end if;

					if(CON.OBTENER_HOMOLOGACION_APOTEOSYS('PRONTOPAGO', REC_EXT.TIPODOC, REC_EXT.CUENTA,'', 5)::int=1)then
						MCTYPE.MC_____NUMEVENC__B := 1;
					else
						MCTYPE.MC_____NUMEVENC__B := null;
					end if;

					--FUNCION QUE TRANSACCION POR TIPO DE DOCUMENTO EN TABLA TEMPORAL EN FINTRA.
					SW:=CON.SP_INSERT_TABLE_MC( MCTYPE);
					CONSEC:=CONSEC+1;

				END LOOP;
			END IF;

			--VALIDAMOS VALORES DEBITOS Y CREDITOS DEL COMPROBANTE A TRASLADAR.
			IF CON.SP_VALIDACIONES(MCTYPE, 'LOGISTICA') ='N' THEN
				SW='N';
				CONTINUE;
			END IF;

			CONSEC:=1;

			--------------------------------------------------------------------------------------------------------------------------------------------
			--SE CONSULTA LA TRANSACCION TIPODOC EGR, TRANSFERENCIAS. ESTA TRANSACCION SE PASA COMPLETA
			IF(SW='S')THEN

				FOR REC_EGR IN
					SELECT   A.FECHADOC,
						 B.TIPODOC,
						 B.GRUPO_TRANSACCION,
						 B.PERIODO,
						 B.CUENTA,
						 CASE WHEN HT.NIT_APOTEOSYS IS NOT NULL THEN HT.NIT_APOTEOSYS ELSE A.TERCERO END AS TERCERO,
						 B.VALOR_DEBITO,
						 B.VALOR_CREDITO,
						 B.DETALLE,
						 B.CREATION_DATE,
						 B.CREATION_USER,
						 B.LAST_UPDATE,
						 B.USER_UPDATE,
						 (CASE
						 WHEN D.TIPO_IDEN='CED' THEN 'CC'
						 WHEN D.TIPO_IDEN='RIF' THEN 'CE'
						 WHEN D.TIPO_IDEN='NIT' THEN 'NIT' ELSE
						 'CC' END) AS TERCER_CODIGO____TIT____B,
						 C.DIGITO_VERIFICACION AS TERCER_DIGICHEQ__B,
						 (D.NOMBRE1||' '||D.NOMBRE2) AS TERCER_NOMBCORT__B,
						 (D.APELLIDO1||' '||D.APELLIDO2) AS TERCER_APELLIDOS_B,
						 D.NOMBRE AS TERCER_NOMBEXTE__B,
						 (CASE
						 WHEN C.GRAN_CONTRIBUYENTE='N' AND C.AGENTE_RETENEDOR='N' THEN 'RCOM'
						 WHEN C.GRAN_CONTRIBUYENTE='N' AND C.AGENTE_RETENEDOR='S' THEN 'RCAU'
						 WHEN C.GRAN_CONTRIBUYENTE='S' AND C.AGENTE_RETENEDOR='N' THEN 'GCON'
						 WHEN C.GRAN_CONTRIBUYENTE='S' AND C.AGENTE_RETENEDOR='S' THEN 'GCAU'
						 ELSE 'PNAL' END) AS TERCER_CODIGO____TT_____B,
						 D.DIRECCION AS TERCER_DIRECCION_B,
						 (CASE
						 WHEN E.CODIGO_DANE2!='' THEN E.CODIGO_DANE2
						 ELSE '08001' END) AS TERCER_CODIGO____CIUDAD_B,
						 D.TELEFONO AS TERCER_TELEFONO1_B
					FROM
						CON.COMPROBANTE A
					INNER JOIN CON.COMPRODET B ON(B.DSTRCT=A.DSTRCT AND B.TIPODOC=A.TIPODOC AND B.NUMDOC=A.NUMDOC AND B.GRUPO_TRANSACCION=A.GRUPO_TRANSACCION)
					LEFT JOIN PROVEEDOR C ON(C.DSTRCT=A.DSTRCT AND C.NIT=A.TERCERO)
					LEFT JOIN NIT D ON(D.CEDULA=C.NIT)
					LEFT JOIN CIUDAD E ON(E.CODCIU=D.CODCIU)
					LEFT JOIN CON.HOMOLOGA_TERCEROS HT ON(TRIM(HT.NIT_FINTRA)=TRIM(A.TERCERO))
					WHERE
					 A.DSTRCT='FINV' AND
					 A.TIPODOC='EGR' AND A.NUMDOC=REC_OS.EGRESO
					order by valor_debito desc,tipodoc

				LOOP

					FECHADOC_ := CASE WHEN REPLACE(SUBSTRING(REC_EGR.FECHADOC,1,7),'-','')=REC_EGR.PERIODO THEN REC_EGR.FECHADOC::DATE ELSE con.sp_fecha_corte_mes(SUBSTRING(REC_EGR.PERIODO,1,4),SUBSTRING(REC_EGR.PERIODO,5,2)::INT)::DATE END ;

					FECHADOC_ := CASE WHEN FECHADOC_::DATE<'2016-12-01'::DATE THEN '2016-12-31'::DATE ELSE FECHADOC_::DATE END;

					if(CON.OBTENER_HOMOLOGACION_APOTEOSYS('PRONTOPAGO', REC_EGR.TIPODOC, REC_EGR.CUENTA,'', 6)='S')then
						MCTYPE.MC_____FECHEMIS__B=FECHADOC_;
						MCTYPE.MC_____FECHVENC__B=FECHADOC_;
					else
						MCTYPE.MC_____FECHEMIS__B='0099-01-01 00:00:00';
						MCTYPE.MC_____FECHVENC__B='0099-01-01 00:00:00';
					end if;

					MCTYPE.MC_____CODIGO____CONTAB_B := 'FINT' ;
					MCTYPE.MC_____CODIGO____TD_____B := 'EGRN' ;
					MCTYPE.MC_____CODIGO____CD_____B := 'EG'  ;
					MCTYPE.MC_____SECUINTE__DCD____B := CONSEC  ;
					MCTYPE.MC_____FECHA_____B := CASE WHEN (REC_OS.CREATION_DATE::DATE > FECHADOC_::DATE AND REPLACE(SUBSTRING(REC_OS.CREATION_DATE,1,7),'-','')=REC_EGR.PERIODO)  THEN REC_OS.CREATION_DATE::DATE ELSE FECHADOC_::DATE END;
					--MCTYPE.MC_____FECHA_____B := CASE WHEN REC_OS.CREATION_DATE::DATE> FECHADOC_::DATE THEN REC_OS.CREATION_DATE::DATE ELSE FECHADOC_::DATE END;
					MCTYPE.MC_____NUMERO____B := SECUENCIA_EG  ;
					MCTYPE.MC_____SECUINTE__B := CONSEC  ;
					MCTYPE.MC_____REFERENCI_B := REC_OS.NUMERO_OPERACION  ;
					MCTYPE.MC_____CODIGO____PF_____B := CASE WHEN REC_EGR.PERIODO::INT<201612 THEN 2016 ELSE SUBSTRING(REC_EGR.PERIODO,1,4)::INT END  ;
					MCTYPE.MC_____NUMERO____PERIOD_B := CASE WHEN REC_EGR.PERIODO::INT<201612 THEN 12 ELSE SUBSTRING(REC_EGR.PERIODO,5,2)::INT END  ;
					MCTYPE.MC_____CODIGO____PC_____B :=  'PUCF' ;
					MCTYPE.MC_____CODIGO____CPC____B := CON.OBTENER_HOMOLOGACION_APOTEOSYS('PRONTOPAGO', REC_EGR.TIPODOC, REC_EGR.CUENTA,'', 1)  ;
					MCTYPE.MC_____CODIGO____CU_____B := CON.OBTENER_HOMOLOGACION_APOTEOSYS('PRONTOPAGO', REC_EGR.TIPODOC, REC_EGR.CUENTA,'', 2)  ;
					MCTYPE.MC_____IDENTIFIC_TERCER_B :=  CASE WHEN CHAR_LENGTH(REC_EGR.TERCERO)>10 THEN SUBSTR(REC_EGR.TERCERO,1,10) ELSE REC_EGR.TERCERO END;
					MCTYPE.MC_____DEBMONORI_B := 0  ;
					MCTYPE.MC_____CREMONORI_B := 0 ;
					MCTYPE.MC_____DEBMONLOC_B := REC_EGR.VALOR_DEBITO::NUMERIC  ;
					MCTYPE.MC_____CREMONLOC_B := REC_EGR.VALOR_CREDITO::NUMERIC  ;
					MCTYPE.MC_____INDTIPMOV_B := 4  ;
					MCTYPE.MC_____INDMOVREV_B := 'N'  ;
					MCTYPE.MC_____OBSERVACI_B := REC_EGR.DETALLE  ;
					MCTYPE.MC_____FECHORCRE_B := REC_EGR.CREATION_DATE::TIMESTAMP  ;
					MCTYPE.MC_____AUTOCREA__B := 'ADMIN'  ;
					MCTYPE.MC_____FEHOULMO__B := REC_EGR.LAST_UPDATE::TIMESTAMP  ;
					MCTYPE.MC_____AUTULTMOD_B := ''  ;
					MCTYPE.MC_____VALIMPCON_B := 0  ;
					MCTYPE.MC_____NUMERO_OPER_B := REC_OS.NUMERO_OPERACION;
					MCTYPE.TERCER_CODIGO____TIT____B := REC_EGR.TERCER_CODIGO____TIT____B  ;
					MCTYPE.TERCER_NOMBCORT__B := SUBSTR(REC_EGR.TERCER_NOMBCORT__B,1,32)  ;
					MCTYPE.TERCER_NOMBEXTE__B := SUBSTR(REC_EGR.TERCER_NOMBEXTE__B,1,64)  ;
					MCTYPE.TERCER_APELLIDOS_B := SUBSTR(REC_EGR.TERCER_APELLIDOS_B,1,32)  ;
					MCTYPE.TERCER_CODIGO____TT_____B := REC_EGR.TERCER_CODIGO____TT_____B  ;
					MCTYPE.TERCER_DIRECCION_B := SUBSTR(REC_EGR.TERCER_DIRECCION_B,1,64)  ;
					MCTYPE.TERCER_CODIGO____CIUDAD_B := REC_EGR.TERCER_CODIGO____CIUDAD_B  ;
					MCTYPE.TERCER_TELEFONO1_B := CASE WHEN CHAR_LENGTH(REC_EGR.TERCER_TELEFONO1_B)>15 THEN SUBSTR(REC_EGR.TERCER_TELEFONO1_B,1,15) ELSE REC_EGR.TERCER_TELEFONO1_B END;
					MCTYPE.TERCER_TIPOGIRO__B := 1 ;
					MCTYPE.TERCER_CODIGO____EF_____B := ''  ;
					MCTYPE.TERCER_SUCURSAL__B := ''  ;
					MCTYPE.TERCER_NUMECUEN__B := ''  ;
					MCTYPE.MC_____CODIGO____DS_____B := CON.OBTENER_HOMOLOGACION_APOTEOSYS('PRONTOPAGO', REC_EGR.TIPODOC, REC_EGR.CUENTA,'', 3);

					if(CON.OBTENER_HOMOLOGACION_APOTEOSYS('PRONTOPAGO', REC_EGR.TIPODOC, REC_EGR.CUENTA,'', 4)='S')then
						MCTYPE.MC_____NUMDOCSOP_B := REC_OS.NUMERO_OPERACION;
					else
						MCTYPE.MC_____NUMDOCSOP_B := '';
					end if;

					if(CON.OBTENER_HOMOLOGACION_APOTEOSYS('PRONTOPAGO', REC_EGR.TIPODOC, REC_EGR.CUENTA,'', 5)::int=1)then
						MCTYPE.MC_____NUMEVENC__B := 1;
					else
						MCTYPE.MC_____NUMEVENC__B := null;
					end if;


					--FUNCION PARA INSERTAR EL REGISTRO EN LA TABLA TEMPORAL DE FINTRA
					SW:=CON.SP_INSERT_TABLE_MC( MCTYPE);
					CONSEC:=CONSEC+1;

				END LOOP;

				--VALIDAMOS VALORES DEBITOS Y CREDITOS DEL COMPROBANTE A TRASLADAR.
				IF CON.SP_VALIDACIONES(MCTYPE, 'LOGISTICA') ='N' THEN
					SW='N';

					--BORRAMOS EL COMPROBANTE DE EXT
					DELETE FROM CON.MC____
					WHERE MC_____NUMERO____B = SECUENCIA_EXT AND MC_____CODIGO____CONTAB_B = 'FINT'
				         AND MC_____CODIGO____TD_____B = 'OPER' AND  MC_____CODIGO____CD_____B = 'EXT'  ;

					CONTINUE;
				END IF;

				--CONSEC:=1;

			END IF;

			--ACTUALIZAMOS EL REGISTRO EN OS PARA SABER QUE SE PROCESO
			IF(SW='S')THEN
				UPDATE
					FIN.ORDEN_SERVICIO
				SET
					PROCESADO='S'
				WHERE
					DSTRCT='FINV' AND
					TIPO_OPERACION='EXT' AND
					NUMERO_OPERACION=REC_OS.NUMERO_OPERACION;

				SW:='N';
			END IF;

	END LOOP;

	RETURN 'OK';

END;
$BODY$
  LANGUAGE plpgsql VOLATILE;
ALTER FUNCTION con.interfaz_fintra_logistica_apoteosys_prontopago()
  OWNER TO postgres;
