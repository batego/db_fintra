-- Function: con.interfaz_consumo_fintra()

-- DROP FUNCTION con.interfaz_consumo_fintra();

CREATE OR REPLACE FUNCTION con.interfaz_consumo_fintra()
  RETURNS text AS
$BODY$

DECLARE

 /************************************************
  *DESCRIPCION: ESTA FUNCION BUSCA TODOS LO NEGOCIOS CONSUMO.
  *AUTOR:=@MMEDINA
  *FECHA CREACION:=2017-09-02
  *LAST_UPDATE
  *DESCRIPCION DE CAMBIOS Y FECHA
  ************************************************/

NEGOCIO_ RECORD;
INFOITEMS_ RECORD;
INFOCLIENTE RECORD;
LONGITUD NUMERIC;
SECUENCIA_GEN INTEGER;
SECUENCIA_INT INTEGER:= 1;
FECHADOC_ VARCHAR:= '';
MCTYPE CON.TYPE_INSERT_MC;
SW TEXT:='N';
VALIDACIONES TEXT;
CUENTAS_IVA VARCHAR[] := '{24080122}';

BEGIN
	/**SACAMOS EL LISTADO DE NEGOCIOS*/
	FOR NEGOCIO_ IN
		SELECT
			NEG.COD_NEG,
			NEG.COD_CLI,
			NEG.FECHA_NEGOCIO,
			CONV.AGENCIA,
			UNEG.ID AS UNIDAD_NEG,REPLACE(SUBSTRING(NEG.F_DESEM,1,7),'-','') as PERIODO,
			DOCUMENTO,
			'NC'::VARCHAR AS TIPO_DOCUMENTO,
			UNEG.DESCRIPCION AS UNIDAD_NEGOCIO,
			SUBSTRING(SP_UNEG_NEGOCIO_NAME(NEG.COD_NEG),1,1) AS PREFIJO
		FROM NEGOCIOS NEG
		INNER JOIN CONVENIOS CONV ON (CONV.ID_CONVENIO = NEG.ID_CONVENIO)
		INNER JOIN REL_UNIDADNEGOCIO_CONVENIOS RUC ON (CONV.ID_CONVENIO = RUC.ID_CONVENIO)
		INNER JOIN UNIDAD_NEGOCIO UNEG ON (UNEG.ID = RUC.ID_UNID_NEGOCIO)
		INNER JOIN SOLICITUD_AVAL SOLA ON (SOLA.COD_NEG = NEG.COD_NEG)
		INNER JOIN CON.FACTURA FAC ON FAC.NEGASOC = NEG.COD_NEG
		WHERE NEG.ESTADO_NEG IN ('T','A') AND UNEG.ID = '30'
		AND PROCESADO_MC = 'S'
		AND NEG.FINANCIA_AVAL = FALSE
		AND NEG.NEGOCIO_REL = ''
		AND FAC.DOCUMENTO LIKE 'R00%'
		AND NEG.COD_NEG NOT IN (SELECT NEGOCIO_REESTRUCTURACION FROM REL_NEGOCIOS_REESTRUCTURACION)
		and fac.documento not in (select documento from con.traslado_facturas_apoteosys)
--		AND NEG.COD_NEG = 'FC00012'
		--AND REPLACE(SUBSTRING(NEG.F_DESEM,1,7),'-','')=REPLACE(SUBSTRING(CURRENT_DATE,1,7),'-','')


	LOOP
		SELECT INTO SECUENCIA_GEN NEXTVAL('CON.INTERFAZ_SECUENCIA_OPER_APOTEOSYS');
		RAISE NOTICE 'PASO: %',NEGOCIO_.COD_NEG;
		/**BUSCAMOS LA INFORMACION DEL CLIENTE*/
		SELECT INTO INFOCLIENTE
			(CASE
			WHEN TIPO_IDEN ='CED' THEN 'CC'
			WHEN TIPO_IDEN ='RIF' THEN 'CE'
			WHEN TIPO_IDEN ='NIT' THEN 'NIT' ELSE
			'CC' END) AS TIPO_DOC,
			(CASE
			WHEN TIPO_IDEN IN  ('RIF','NIT') THEN 'RCOM'  -->REGIMEN COMUN
			WHEN TIPO_IDEN IN  ('CED')  THEN 'RSCP'
			ELSE
			'RSCP'
			END) AS CODIGO,
			(CASE
			WHEN E.CODIGO_DANE2!='' THEN E.CODIGO_DANE2
			ELSE '08001' END) AS CODIGOCIU,
			(D.NOMBRE1||' '||D.NOMBRE2) AS NOMBRE_CORTO,
			(D.APELLIDO1||' '||D.APELLIDO2) AS APELLIDOS,
			*
		FROM  NIT D --ON(D.CEDULA=PROV.NIT)
		LEFT JOIN CIUDAD E ON(E.CODCIU=D.CODCIU)
		WHERE CEDULA = NEGOCIO_.COD_CLI;

		MCTYPE.MC_____CODIGO____CONTAB_B := 'FINT' ;
		MCTYPE.MC_____CODIGO____TD_____B := 'OPER' ;
		MCTYPE.MC_____CODIGO____CD_____B := 'NCF'||NEGOCIO_.PREFIJO;
		MCTYPE.MC_____NUMERO____B := SECUENCIA_GEN  ; --SECUENCIA GENERAL


		/**BUSCAMOS LA COMPLETA QUE CONFORMARA EL ASIENTO CONTABLE PARA MANDARLO A APOTEOSYS*/
		FOR INFOITEMS_ IN

		---- CREDITO COMISION
		(SELECT
			CODIGO_CUENTA_CONTABLE  AS CUENTA,
			CXP.DOCUMENTO,
			'NC'::VARCHAR AS TIPO_DOCUMENTO,
			CASE WHEN HT.NIT_APOTEOSYS IS NOT NULL THEN HT.NIT_APOTEOSYS ELSE FAC.NIT END AS NIT,
			--FAC.NIT,
			0::numeric  AS VALOR_DEB,
			VALOR_UNITARIO::NUMERIC AS VALOR_CREDT,
			'PASIVO PUENTE CONSUMO FINTRA' AS DESCRIPCION,
			F_DESEM::DATE AS CREATION_DATE,
			FAC.FECHA_VENCIMIENTO,
			REPLACE(SUBSTRING(F_DESEM,1,7),'-','') AS PERIODO,
			(CASE
			WHEN TIPO_IDEN ='CED' THEN 'CC'
			WHEN TIPO_IDEN ='RIF' THEN 'CE'
			WHEN TIPO_IDEN ='NIT' THEN 'NIT' ELSE
			'CC' END) AS TIPO_DOC,
			(CASE
			WHEN TIPO_IDEN IN  ('RIF','NIT') THEN 'RCOM'  -->REGIMEN COMUN
			WHEN TIPO_IDEN IN  ('CED')  THEN 'RSCP'
			ELSE 'RSCP'
			END) AS CODIGO,
			(CASE
			WHEN E.CODIGO_DANE2!='' THEN E.CODIGO_DANE2
			ELSE '08001' END) AS CODIGOCIU,
			(D.NOMBRE1||' '||D.NOMBRE2) AS NOMBRE_CORTO,
			(D.APELLIDO1||' '||D.APELLIDO2) AS APELLIDOS,
			D.NOMBRE,
			D.DIRECCION,
			D.TELEFONO
		FROM CON.FACTURA FAC
		INNER JOIN NEGOCIOS NEG ON (FAC.NEGASOC = NEG.COD_NEG)
		INNER JOIN CON.FACTURA_DETALLE FACDET ON (FAC.DOCUMENTO = FACDET.DOCUMENTO)
		LEFT JOIN NIT D ON(D.CEDULA=FAC.NIT)
		LEFT JOIN CIUDAD E ON(E.CODCIU=D.CODCIU)
		LEFT JOIN CON.HOMOLOGA_TERCEROS HT ON(HT.NIT_FINTRA=FAC.NIT)
		INNER JOIN FIN.CXP_DOC CXP ON CXP.DOCUMENTO_RELACIONADO=NEG.COD_NEG
		WHERE NEGASOC =   NEGOCIO_.COD_NEG
		AND FAC.REG_STATUS = ''
		AND FACDET.REG_STATUS = ''
		AND VALOR_UNITARIO > 0
		AND FAC.DOCUMENTO LIKE 'R00%'
		and handle_code not in ('BA','AV')
		--AND FAC.DESCRIPCION NOT IN ('CXC AVAL')
		GROUP BY FACDET.CODIGO_CUENTA_CONTABLE, NUM_DOC_FEN,F_DESEM,FAC.FECHA_VENCIMIENTO,NEGASOC,FAC.TIPO_DOCUMENTO,FAC.NIT,CXP.DOCUMENTO,HT.NIT_APOTEOSYS
		,TIPO_IDEN, E.CODIGO_DANE2, D.NOMBRE1, D.NOMBRE2, D.APELLIDO1, D.APELLIDO2,D.NOMBRE,D.DIRECCION,D.TELEFONO, FACDET.VALOR_UNITARIO
		ORDER BY NUM_DOC_FEN::INTEGER
		)
		UNION ALL
		---- DEBITO COMISION
		(SELECT
			CODIGO_CUENTA  AS CUENTA,
			CXP.DOCUMENTO,
			CXI.TIPO_DOCUMENTO,
			CASE WHEN HT.NIT_APOTEOSYS IS NOT NULL THEN HT.NIT_APOTEOSYS ELSE FAC.NIT END AS NIT,
			--FAC.NIT,
			VLR::NUMERIC  AS VALOR_DEB,
			0::NUMERIC AS VALOR_CREDT,
			'PASIVO PUENTE CONSUMO FINTRA' AS DESCRIPCION,
			F_DESEM::DATE AS CREATION_DATE,
			FAC.FECHA_VENCIMIENTO,
			REPLACE(SUBSTRING(F_DESEM,1,7),'-','') AS PERIODO,
			(CASE
			WHEN TIPO_IDEN ='CED' THEN 'CC'
			WHEN TIPO_IDEN ='RIF' THEN 'CE'
			WHEN TIPO_IDEN ='NIT' THEN 'NIT' ELSE
			'CC' END) AS TIPO_DOC,
			(CASE
			WHEN TIPO_IDEN IN  ('RIF','NIT') THEN 'RCOM'  -->REGIMEN COMUN
			WHEN TIPO_IDEN IN  ('CED')  THEN 'RSCP'
			ELSE 'RSCP'
			END) AS CODIGO,
			(CASE
			WHEN E.CODIGO_DANE2!='' THEN E.CODIGO_DANE2
			ELSE '08001' END) AS CODIGOCIU,
			(D.NOMBRE1||' '||D.NOMBRE2) AS NOMBRE_CORTO,
			(D.APELLIDO1||' '||D.APELLIDO2) AS APELLIDOS,
			D.NOMBRE,
			D.DIRECCION,
			D.TELEFONO
		FROM CON.FACTURA FAC
		INNER JOIN NEGOCIOS NEG ON (FAC.NEGASOC = NEG.COD_NEG)
		INNER JOIN CON.FACTURA_DETALLE FACDET ON (FAC.DOCUMENTO = FACDET.DOCUMENTO)
		LEFT JOIN NIT D ON(D.CEDULA=FAC.NIT)
		LEFT JOIN CIUDAD E ON(E.CODCIU=D.CODCIU)
		LEFT JOIN CON.HOMOLOGA_TERCEROS HT ON(HT.NIT_FINTRA=FAC.NIT)
		INNER JOIN FIN.CXP_DOC CXP ON CXP.DOCUMENTO_RELACIONADO=NEG.COD_NEG
		INNER JOIN FIN.CXP_ITEMS_DOC CXI ON CXI.DOCUMENTO=CXP.DOCUMENTO AND CXI.TIPO_DOCUMENTO = 'NC'
		WHERE NEGASOC =  NEGOCIO_.COD_NEG
		AND FAC.REG_STATUS = ''
		AND FACDET.REG_STATUS = ''
		AND VALOR_UNITARIO > 0
		AND FAC.DOCUMENTO LIKE 'R00%'
		--AND FAC.DESCRIPCION NOT IN ('CXC AVAL')
		GROUP BY cxi.codigo_cuenta, NUM_DOC_FEN,F_DESEM,FAC.FECHA_VENCIMIENTO,NEGASOC,CXI.TIPO_DOCUMENTO,FAC.NIT,CXP.DOCUMENTO,HT.NIT_APOTEOSYS
		,TIPO_IDEN, E.CODIGO_DANE2, D.NOMBRE1, D.NOMBRE2, D.APELLIDO1, D.APELLIDO2,D.NOMBRE,D.DIRECCION,D.TELEFONO,cxi.vlr
		ORDER BY NUM_DOC_FEN::INTEGER
		)
		LOOP
			--CUENTA_ASIENTO := CON.INTERFAZ_CUENTA_DIFERIDOS_APOTEOSYS(SUBSTRING(NEGOCIO_.COD_NEG,1,2)||'IA', INFOITEMS_.ITERACION, NEGOCIO_.AGENCIA,NEGOCIO_.UNIDAD_NEG::VARCHAR);
			--RAISE NOTICE 'CUENTA_ASIENTO %',CUENTA_ASIENTO;
			IF(INFOITEMS_.TIPO_DOCUMENTO IN ('FAC','FAP','NEG','NC') AND CON.OBTENER_HOMOLOGACION_APOTEOSYS('NC_COMISION',INFOITEMS_.TIPO_DOCUMENTO, INFOITEMS_.CUENTA, NEGOCIO_.AGENCIA, 6)='S')THEN
				MCTYPE.MC_____FECHVENC__B = INFOITEMS_.FECHA_VENCIMIENTO; --FECHA VENCIMIENTO
				IF (INFOITEMS_.FECHA_VENCIMIENTO < INFOITEMS_.CREATION_DATE)THEN /** SE VALIDA SI LA FECHA DE VENCIMEINTO ES MENOR A LA DE CREACION*/
					MCTYPE.MC_____FECHEMIS__B = INFOITEMS_.FECHA_VENCIMIENTO; --FECHA CREACION
				ELSE
					MCTYPE.MC_____FECHEMIS__B = INFOITEMS_.CREATION_DATE; --FECHA CREACION
				END IF;
			ELSE
				MCTYPE.MC_____FECHEMIS__B='0099-01-01 00:00:00';
				MCTYPE.MC_____FECHVENC__B='0099-01-01 00:00:00';
			END IF;
			FECHADOC_ := CASE WHEN REPLACE(SUBSTRING(INFOITEMS_.CREATION_DATE,1,7),'-','') = INFOITEMS_.PERIODO THEN INFOITEMS_.CREATION_DATE::DATE ELSE CON.SP_FECHA_CORTE_MES(SUBSTRING(INFOITEMS_.PERIODO,1,4), SUBSTRING(INFOITEMS_.PERIODO,5,2)::INT)::DATE END;
			MCTYPE.MC_____FECHA_____B := CASE WHEN (INFOITEMS_.CREATION_DATE::DATE > FECHADOC_::DATE AND REPLACE(SUBSTRING(INFOITEMS_.CREATION_DATE,1,7),'-','') = INFOITEMS_.PERIODO)  THEN INFOITEMS_.CREATION_DATE::DATE ELSE FECHADOC_::DATE END;
			MCTYPE.MC_____SECUINTE__DCD____B := SECUENCIA_INT;--SECUENCIA INTERNA
			MCTYPE.MC_____SECUINTE__B := SECUENCIA_INT;--SECUENCIA INTERNA
			MCTYPE.MC_____REFERENCI_B := NEGOCIO_.COD_NEG;
			MCTYPE.MC_____CODIGO____PF_____B := SUBSTRING( INFOITEMS_.PERIODO,1,4)::INT;
			MCTYPE.MC_____NUMERO____PERIOD_B := SUBSTRING( INFOITEMS_.PERIODO,5,2)::INT;
			MCTYPE.MC_____CODIGO____PC_____B :=  'PUCF';
			MCTYPE.MC_____CODIGO____CPC____B := CON.OBTENER_HOMOLOGACION_APOTEOSYS('NC_COMISION', INFOITEMS_.TIPO_DOCUMENTO, INFOITEMS_.CUENTA, NEGOCIO_.AGENCIA, 1);
			MCTYPE.MC_____CODIGO____CU_____B := CON.OBTENER_HOMOLOGACION_APOTEOSYS('NC_COMISION', INFOITEMS_.TIPO_DOCUMENTO, INFOITEMS_.CUENTA, NEGOCIO_.AGENCIA, 2);
			MCTYPE.MC_____IDENTIFIC_TERCER_B := INFOITEMS_.NIT;
			MCTYPE.MC_____DEBMONORI_B := 0;
			MCTYPE.MC_____CREMONORI_B := 0;
			MCTYPE.MC_____DEBMONLOC_B := INFOITEMS_.VALOR_DEB::NUMERIC;
			MCTYPE.MC_____CREMONLOC_B := INFOITEMS_.VALOR_CREDT::NUMERIC;
			MCTYPE.MC_____INDTIPMOV_B := 4;
			MCTYPE.MC_____INDMOVREV_B := 'N';
			MCTYPE.MC_____OBSERVACI_B := INFOITEMS_.DESCRIPCION || ' '||NEGOCIO_.UNIDAD_NEGOCIO;
			MCTYPE.MC_____FECHORCRE_B := INFOITEMS_.CREATION_DATE::TIMESTAMP;
			MCTYPE.MC_____AUTOCREA__B := 'ADMIN';
			MCTYPE.MC_____FEHOULMO__B := INFOITEMS_.CREATION_DATE::TIMESTAMP;
			MCTYPE.MC_____AUTULTMOD_B := '';
			MCTYPE.MC_____VALIMPCON_B := 0;
			MCTYPE.MC_____NUMERO_OPER_B := '';
			MCTYPE.TERCER_CODIGO____TIT____B := INFOITEMS_.TIPO_DOC;
			MCTYPE.TERCER_NOMBCORT__B := SUBSTR(INFOITEMS_.NOMBRE_CORTO,1,32);
			MCTYPE.TERCER_NOMBEXTE__B := SUBSTR (INFOITEMS_.NOMBRE,1,64);
			MCTYPE.TERCER_APELLIDOS_B := SUBSTR(INFOITEMS_.APELLIDOS,1,32);
			MCTYPE.TERCER_CODIGO____TT_____B := INFOITEMS_.CODIGO;
			MCTYPE.TERCER_DIRECCION_B := SUBSTR(INFOITEMS_.DIRECCION,1,64);
			MCTYPE.TERCER_CODIGO____CIUDAD_B := INFOITEMS_.CODIGOCIU;
			MCTYPE.TERCER_TELEFONO1_B := CASE WHEN CHAR_LENGTH(INFOITEMS_.TELEFONO)>15 THEN SUBSTR(INFOITEMS_.TELEFONO,1,15) ELSE INFOITEMS_.TELEFONO END;
			MCTYPE.TERCER_TIPOGIRO__B := 1;
			MCTYPE.TERCER_CODIGO____EF_____B := '';
			MCTYPE.TERCER_SUCURSAL__B := '';
			MCTYPE.TERCER_NUMECUEN__B := '';
			MCTYPE.MC_____CODIGO____DS_____B := CON.OBTENER_HOMOLOGACION_APOTEOSYS('NC_COMISION',INFOITEMS_.TIPO_DOCUMENTO, INFOITEMS_.CUENTA, NEGOCIO_.AGENCIA, 3);
			MCTYPE.MC_____BASE______B:=0;

			IF(INFOITEMS_.CUENTA = '24080122')THEN

				IF(INFOITEMS_.VALOR_CREDT>0) THEN
					MCTYPE.MC_____BASE______B:= INFOITEMS_.VALOR_CREDT/0.19;
					RAISE NOTICE 'MCTYPE.MC_____BASE______B: %',MCTYPE.MC_____BASE______B;
				ELSE
					MCTYPE.MC_____BASE______B:= INFOITEMS_.VALOR_DEB/0.19;
					RAISE NOTICE 'MCTYPE.MC_____BASE______B: %',MCTYPE.MC_____BASE______B;
				END IF;
			END IF;

			IF(CON.OBTENER_HOMOLOGACION_APOTEOSYS('NC_COMISION', INFOITEMS_.TIPO_DOCUMENTO, INFOITEMS_.CUENTA, NEGOCIO_.AGENCIA, 4)='S')THEN
				MCTYPE.MC_____NUMDOCSOP_B := INFOITEMS_.DOCUMENTO; -->FACTURA
			ELSE
				MCTYPE.MC_____NUMDOCSOP_B := '';
			END IF;

			IF(CON.OBTENER_HOMOLOGACION_APOTEOSYS('NC_COMISION', INFOITEMS_.TIPO_DOCUMENTO, INFOITEMS_.CUENTA, NEGOCIO_.AGENCIA, 5)::INT=1)THEN
				MCTYPE.MC_____NUMEVENC__B := 1;
			ELSE
				MCTYPE.MC_____NUMEVENC__B := NULL;
			END IF;

			--FUNCION PARA INSERTAR EL REGISTRO EN LA TABLA TEMPORAL DE FINTRA
			SW:=CON.SP_INSERT_TABLE_MC_FENALCO____(MCTYPE);
			SECUENCIA_INT :=SECUENCIA_INT+1;

			--RAISE NOTICE 'VALOR_DEB: % VALOR_CREDT: %',INFOITEMS_.VALOR_DEB,INFOITEMS_.VALOR_CREDT;
		END LOOP;

		--VALIDAMOS VALORES DEBITOS Y CREDITOS DEL COMPROBANTE A TRASLADAR.
		IF CON.SP_VALIDACIONES(MCTYPE,'NC_COMISION') ='N' THEN
			SW = 'N';
			CONTINUE;
		END IF;

		IF(SW = 'S')THEN
			--SELECT * FROM OPAV.SL_TRASLADO_FACTURAS_APOTEOSYS
			INSERT INTO con.traslado_facturas_apoteosys(cod_neg, tipo_documento, documento, agencia, periodo, fecha_negocio, unidad_negocio)
			VALUES (NEGOCIO_.COD_NEG, NEGOCIO_.TIPO_DOCUMENTO, NEGOCIO_.DOCUMENTO, NEGOCIO_.AGENCIA, NEGOCIO_.PERIODO, NEGOCIO_.FECHA_NEGOCIO, NEGOCIO_.UNIDAD_NEGOCIO);
		END IF;

		SECUENCIA_INT:=1;

	END LOOP;

RETURN 'OK' ;

END;
$BODY$
  LANGUAGE plpgsql VOLATILE;
ALTER FUNCTION con.interfaz_consumo_fintra()
  OWNER TO postgres;
