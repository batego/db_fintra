-- Function: con.interfaz_fintra_ut_apoteosys_ingreso()

-- DROP FUNCTION con.interfaz_fintra_ut_apoteosys_ingreso();

CREATE OR REPLACE FUNCTION con.interfaz_fintra_ut_apoteosys_ingreso()
  RETURNS text AS
$BODY$

DECLARE

 /************************************************
  *DESCRIPCION: ESTA FUNCION ARMA EL PAGO DE LAS
  *CORRIDAS GENERADAS Y CONTRUYE EL ASIENTO CONTABLE
  *QUE MAS ADELANTE SE TRASLADARA A APOTEOSYS.
  *DOCUMENTACION:=
  *AUTOR:=@JZAPATA
  *FECHA CREACION:=2018-01-23
  *LAST_UPDATE
  *DESCRIPCION DE CAMBIOS Y FECHA
  ************************************************/

REC_OS RECORD;
REC_ING RECORD;
SECUENCIA_ING INTEGER;
CONSEC INTEGER:=1;
FECHADOC_ TEXT:='';
SW TEXT:='N';
MCTYPE CON.TYPE_INSERT_MC;

BEGIN

	--SE CONSULTAN LOS INGRESOS QUE SE VAN A TRANSPORTAR HACIA APOTEOSYS

	FOR REC_OS IN

		--QUERY PRINCIPAL DONDE SALEN LOS INGRESOS
		SELECT
			A.TIPO_DOCUMENTO,A.NUM_INGRESO, B.FECHA_INGRESO
		FROM
			CON.INGRESO_DETALLE A
		INNER JOIN
			CON.INGRESO B ON(B.DSTRCT=A.DSTRCT AND B.TIPO_DOCUMENTO=A.TIPO_DOCUMENTO AND B.NUM_INGRESO=A.NUM_INGRESO)
		WHERE
			A.REG_STATUS='' AND
			A.DSTRCT='FINV' AND
			A.TIPO_DOCUMENTO='ING' AND
			A.DOCUMENTO IN(
				SELECT
					FACTURA_CXC
				FROM
					CON.PLANILLAS_PROCESADAS_UT
				WHERE
					PROCESADO_CXC='S' AND
					REPLACE(SUBSTRING(CREATION_DATE_PLANILLA,1,7),'-','')=REPLACE(SUBSTRING(NOW(),1,7),'-','')
				GROUP BY
					FACTURA_CXC) AND
			COALESCE(PROCESADO_ICA,'N')='N'
		GROUP BY
			A.TIPO_DOCUMENTO,A.NUM_INGRESO, B.FECHA_INGRESO
		ORDER BY
			A.NUM_INGRESO

/**
select con.interfaz_fintra_ut_apoteosys_ingreso();
select * from con.mc_recaudo____ where MC_____CODIGO____TD_____B = 'INGN' and MC_____CODIGO____CD_____B = 'ICLG' and procesado='N';
delete from con.mc_recaudo____ where MC_____CODIGO____TD_____B = 'INGN' and MC_____CODIGO____CD_____B = 'ICLG' and procesado='N';

*/

	LOOP

		raise notice 'INGRESO: %',REC_OS.NUM_INGRESO;

		SECUENCIA_ING:=0;
		CONSEC :=1;

		--SECUENCIA DE LA TRANSACCION
		SELECT INTO SECUENCIA_ING NEXTVAL('CON.INTERFAZ_SECUENCIA_BINGRESO_APOTEOSYS');

		FOR REC_ING IN

			select
				'T-'||COALESCE((SELECT codigo_cuenta FROM banco  WHERE branch_code =ing.branch_code AND bank_account_no=ing.bank_account_no),'00000000') as cuenta,
				--ing.periodo,
				replace(substring(ing.FECHA_INGRESO,1,7),'-','') as periodo,
				ing.creation_date,
				ing.last_update,
				CASE WHEN HT.NIT_APOTEOSYS IS NOT NULL THEN HT.NIT_APOTEOSYS ELSE ing.nitcli END AS NIT,
				vlr_ingreso as valor_debito,
				0 as valor_credito,
				ing.num_ingreso as doc_soporte,
				ing.descripcion_ingreso as detalle,
				(CASE
				 WHEN D.TIPO_IDEN='CED' THEN 'CC'
				 WHEN D.TIPO_IDEN='RIF' THEN 'CE'
				 WHEN D.TIPO_IDEN='NIT' THEN 'NIT' ELSE
				 'CC' END) AS TERCER_CODIGO____TIT____B,
				 C.DIGITO_VERIFICACION AS TERCER_DIGICHEQ__B,
				 (D.NOMBRE1||' '||D.NOMBRE2) AS TERCER_NOMBCORT__B,
				 (D.APELLIDO1||' '||D.APELLIDO2) AS TERCER_APELLIDOS_B,
				 D.NOMBRE AS TERCER_NOMBEXTE__B,
				 (CASE
				 WHEN C.GRAN_CONTRIBUYENTE='N' AND C.AGENTE_RETENEDOR='N' THEN 'RCOM'
				 WHEN C.GRAN_CONTRIBUYENTE='N' AND C.AGENTE_RETENEDOR='S' THEN 'RCAU'
				 WHEN C.GRAN_CONTRIBUYENTE='S' AND C.AGENTE_RETENEDOR='N' THEN 'GCON'
				 WHEN C.GRAN_CONTRIBUYENTE='S' AND C.AGENTE_RETENEDOR='S' THEN 'GCAU'
				 ELSE 'PNAL' END) AS TERCER_CODIGO____TT_____B,
				 D.DIRECCION AS TERCER_DIRECCION_B,
				 (CASE
				 WHEN E.CODIGO_DANE2!='' THEN E.CODIGO_DANE2
				 ELSE '08001' END) AS TERCER_CODIGO____CIUDAD_B,
				 D.TELEFONO AS TERCER_TELEFONO1_B
			from
				con.ingreso ing
			LEFT JOIN
				PROVEEDOR C ON(C.NIT=ing.nitcli)
			LEFT JOIN
				NIT D ON(D.CEDULA=C.NIT)
			LEFT JOIN
				CIUDAD E ON(E.CODCIU=D.CODCIU)
			LEFT JOIN
				CON.HOMOLOGA_TERCEROS HT ON(HT.NIT_FINTRA=ing.nitcli)
			where
				ing.reg_status='' and
				ing.tipo_documento='ING' and
				ing.num_ingreso=rec_os.num_ingreso --'IC257509'
			UNION ALL
			select
				'T-'||ingd.cuenta as cuenta,
				--ingd.periodo,
				replace(substring(REC_OS.FECHA_INGRESO,1,7),'-','') as periodo,
				ingd.creation_date,
				ingd.last_update,
				CASE WHEN HT.NIT_APOTEOSYS IS NOT NULL THEN HT.NIT_APOTEOSYS ELSE ingd.nitcli END AS NIT,
				0 as valor_debito,
				ingd.valor_ingreso as valor_credito,
				ingd.factura as doc_soporte,
				'DOCUMENTO A PAGAR: '||ingd.documento as detalle,
				(CASE
				 WHEN D.TIPO_IDEN='CED' THEN 'CC'
				 WHEN D.TIPO_IDEN='RIF' THEN 'CE'
				 WHEN D.TIPO_IDEN='NIT' THEN 'NIT' ELSE
				 'CC' END) AS TERCER_CODIGO____TIT____B,
				 C.DIGITO_VERIFICACION AS TERCER_DIGICHEQ__B,
				 (D.NOMBRE1||' '||D.NOMBRE2) AS TERCER_NOMBCORT__B,
				 (D.APELLIDO1||' '||D.APELLIDO2) AS TERCER_APELLIDOS_B,
				 D.NOMBRE AS TERCER_NOMBEXTE__B,
				 (CASE
				 WHEN C.GRAN_CONTRIBUYENTE='N' AND C.AGENTE_RETENEDOR='N' THEN 'RCOM'
				 WHEN C.GRAN_CONTRIBUYENTE='N' AND C.AGENTE_RETENEDOR='S' THEN 'RCAU'
				 WHEN C.GRAN_CONTRIBUYENTE='S' AND C.AGENTE_RETENEDOR='N' THEN 'GCON'
				 WHEN C.GRAN_CONTRIBUYENTE='S' AND C.AGENTE_RETENEDOR='S' THEN 'GCAU'
				 ELSE 'PNAL' END) AS TERCER_CODIGO____TT_____B,
				 D.DIRECCION AS TERCER_DIRECCION_B,
				 (CASE
				 WHEN E.CODIGO_DANE2!='' THEN E.CODIGO_DANE2
				 ELSE '08001' END) AS TERCER_CODIGO____CIUDAD_B,
				 D.TELEFONO AS TERCER_TELEFONO1_B
			from
				con.ingreso_detalle ingd
			LEFT JOIN
				PROVEEDOR C ON(C.NIT=ingd.nitcli)
			LEFT JOIN
				NIT D ON(D.CEDULA=C.NIT)
			LEFT JOIN
				CIUDAD E ON(E.CODCIU=D.CODCIU)
			LEFT JOIN
				CON.HOMOLOGA_TERCEROS HT ON(HT.NIT_FINTRA=ingd.nitcli)
			where
				ingd.reg_status='' and
				ingd.tipo_documento='ING' and
				ingd.num_ingreso=rec_os.num_ingreso --'IC257509'

		LOOP

			FECHADOC_ := CASE WHEN REPLACE(SUBSTRING(REC_OS.FECHA_INGRESO,1,7),'-','')=REC_ING.PERIODO THEN REC_OS.FECHA_INGRESO::DATE ELSE con.sp_fecha_corte_mes(SUBSTRING(REC_ING.PERIODO,1,4),SUBSTRING(REC_ING.PERIODO,5,2)::INT)::DATE END ;

			IF(CON.OBTENER_HOMOLOGACION_APOTEOSYS('RECAUDO_LG', REC_OS.TIPO_DOCUMENTO, REC_ING.CUENTA,'', 6)='S')THEN
				MCTYPE.MC_____FECHEMIS__B=FECHADOC_::DATE;
				MCTYPE.MC_____FECHVENC__B=FECHADOC_::DATE;
			ELSE
				MCTYPE.MC_____FECHEMIS__B='0099-01-01 00:00:00';
				MCTYPE.MC_____FECHVENC__B='0099-01-01 00:00:00';

			END IF;

			MCTYPE.MC_____CODIGO____CONTAB_B := 'FINT' ;
			MCTYPE.MC_____CODIGO____TD_____B := 'INGN' ;
			MCTYPE.MC_____CODIGO____CD_____B := 'ICLG'  ;
			MCTYPE.MC_____SECUINTE__DCD____B := CONSEC  ;
			MCTYPE.MC_____FECHA_____B := FECHADOC_::DATE;
			MCTYPE.MC_____NUMERO____B := SECUENCIA_ING  ;
			MCTYPE.MC_____SECUINTE__B := CONSEC  ;
			MCTYPE.MC_____REFERENCI_B := REC_OS.NUM_INGRESO;
			MCTYPE.MC_____CODIGO____PF_____B := SUBSTRING(REC_ING.PERIODO,1,4)::INT  ;
			MCTYPE.MC_____NUMERO____PERIOD_B := SUBSTRING(REC_ING.PERIODO,5,2)::INT  ;
			MCTYPE.MC_____CODIGO____PC_____B :=  'PUCF' ;
			MCTYPE.MC_____CODIGO____CPC____B := CON.OBTENER_HOMOLOGACION_APOTEOSYS('RECAUDO_LG', REC_OS.TIPO_DOCUMENTO, REC_ING.CUENTA,'', 1)  ;
			MCTYPE.MC_____CODIGO____CU_____B := CON.OBTENER_HOMOLOGACION_APOTEOSYS('RECAUDO_LG', REC_OS.TIPO_DOCUMENTO, REC_ING.CUENTA,'', 2)  ;
			MCTYPE.MC_____IDENTIFIC_TERCER_B := CASE WHEN CHAR_LENGTH(REC_ING.NIT)>10 THEN SUBSTR(REC_ING.NIT,1,10) ELSE REC_ING.NIT END;
			MCTYPE.MC_____DEBMONORI_B := 0  ;
			MCTYPE.MC_____CREMONORI_B := 0 ;
			MCTYPE.MC_____DEBMONLOC_B := REC_ING.VALOR_DEBITO::NUMERIC  ;
			MCTYPE.MC_____CREMONLOC_B := REC_ING.VALOR_CREDITO::NUMERIC  ;
			MCTYPE.MC_____INDTIPMOV_B := 4  ;
			MCTYPE.MC_____INDMOVREV_B := 'N'  ;
			MCTYPE.MC_____OBSERVACI_B := REC_ING.DETALLE ||'-UT';
			MCTYPE.MC_____FECHORCRE_B := REC_ING.CREATION_DATE::TIMESTAMP  ;
			MCTYPE.MC_____AUTOCREA__B := 'ADMIN'  ;
			MCTYPE.MC_____FEHOULMO__B := REC_ING.LAST_UPDATE::TIMESTAMP  ;
			MCTYPE.MC_____AUTULTMOD_B := ''  ;
			MCTYPE.MC_____VALIMPCON_B := 0  ;
			MCTYPE.MC_____NUMERO_OPER_B := REC_OS.NUM_INGRESO;
			MCTYPE.TERCER_CODIGO____TIT____B := REC_ING.TERCER_CODIGO____TIT____B  ;
			MCTYPE.TERCER_NOMBCORT__B := CASE WHEN CHAR_LENGTH(REC_ING.TERCER_NOMBCORT__B)>32 THEN SUBSTR(REC_ING.TERCER_NOMBCORT__B,1,32) ELSE REC_ING.TERCER_NOMBCORT__B END;
			MCTYPE.TERCER_NOMBEXTE__B := REC_ING.TERCER_NOMBEXTE__B  ;
			MCTYPE.TERCER_APELLIDOS_B := CASE WHEN CHAR_LENGTH(REC_ING.TERCER_APELLIDOS_B)>32 THEN SUBSTR(REC_ING.TERCER_APELLIDOS_B,1,32) ELSE REC_ING.TERCER_APELLIDOS_B END;
			MCTYPE.TERCER_CODIGO____TT_____B := REC_ING.TERCER_CODIGO____TT_____B  ;
			MCTYPE.TERCER_DIRECCION_B := REC_ING.TERCER_DIRECCION_B  ;
			MCTYPE.TERCER_CODIGO____CIUDAD_B := REC_ING.TERCER_CODIGO____CIUDAD_B  ;
			MCTYPE.TERCER_TELEFONO1_B := CASE WHEN CHAR_LENGTH(REC_ING.TERCER_TELEFONO1_B)>15 THEN SUBSTR(REC_ING.TERCER_TELEFONO1_B,1,15) ELSE REC_ING.TERCER_TELEFONO1_B END;
			MCTYPE.TERCER_TIPOGIRO__B := 1 ;
			MCTYPE.TERCER_CODIGO____EF_____B := ''  ;
			MCTYPE.TERCER_SUCURSAL__B := ''  ;
			MCTYPE.TERCER_NUMECUEN__B := ''  ;
			MCTYPE.MC_____CODIGO____DS_____B := CON.OBTENER_HOMOLOGACION_APOTEOSYS('RECAUDO_LG', REC_OS.TIPO_DOCUMENTO, REC_ING.CUENTA,'', 3);

			IF(CON.OBTENER_HOMOLOGACION_APOTEOSYS('RECAUDO_LG', REC_OS.TIPO_DOCUMENTO, REC_ING.CUENTA,'', 4)='S')THEN
				MCTYPE.MC_____NUMDOCSOP_B := REC_ING.doc_soporte;
			ELSE
				MCTYPE.MC_____NUMDOCSOP_B := '';
			END IF;

			IF(CON.OBTENER_HOMOLOGACION_APOTEOSYS('RECAUDO_LG', REC_OS.TIPO_DOCUMENTO, REC_ING.CUENTA,'', 5)::INT=1)THEN
				MCTYPE.MC_____NUMEVENC__B := 1;
			ELSE
				MCTYPE.MC_____NUMEVENC__B := NULL;
			END IF;

			--FUNCION QUE TRANSACCION POR TIPO DE DOCUMENTO EN TABLA TEMPORAL EN FINTRA.
			SW:=CON.SP_INSERT_TABLE_MC_RECAUDO____( MCTYPE);
			CONSEC:=CONSEC+1;

		END LOOP;

		--VALIDAMOS VALORES DEBITOS Y CREDITOS DEL COMPROBANTE A TRASLADAR.
		IF CON.SP_VALIDACIONES(MCTYPE, 'RECAUDO') ='N' THEN
			SW='N';

			--BORRAMOS EL COMPROBANTE
			DELETE FROM CON.mc_recaudo____
			WHERE MC_____NUMERO____B = SECUENCIA_GEN AND MC_____CODIGO____CONTAB_B = 'FINT'
			AND MC_____CODIGO____TD_____B = 'INGN' AND  MC_____CODIGO____CD_____B = 'ICLG';

			CONTINUE;
		END IF;

		--ACTUALIZAMOS EL REGISTRO EN OS PARA SABER QUE SE PROCESO
		IF(SW='S')THEN

			UPDATE
				con.ingreso_detalle
			SET
				PROCESADO_ICA='S'
			WHERE
				TIPO_DOCUMENTO=rec_os.tipo_documento and
				num_ingreso=rec_os.num_ingreso;

			SW:='N';
		END IF;

	END LOOP;

	RETURN 'OK';

END;
$BODY$
  LANGUAGE plpgsql VOLATILE;
ALTER FUNCTION con.interfaz_fintra_ut_apoteosys_ingreso()
  OWNER TO postgres;
