-- Function: con.eg_movimiento_contable_paso6(character varying, character varying, character varying, character varying)

-- DROP FUNCTION con.eg_movimiento_contable_paso6(character varying, character varying, character varying, character varying);

CREATE OR REPLACE FUNCTION con.eg_movimiento_contable_paso6(_factura_final character varying, _proveedor_final character varying, _documento_to character varying, nit_to character varying)
  RETURNS text AS
$BODY$

DECLARE

  RESULTADO TEXT:='OK';


BEGIN
	RAISE NOTICE '_FACTURA_FINAL : % _PROVEEDOR_FINAL : % _DOCUMENTO_TO : % NIT_TO : % ',_FACTURA_FINAL,_PROVEEDOR_FINAL,_DOCUMENTO_TO, NIT_TO;
	--ELIMINA TABLA SI EXISTE
	TRUNCATE TEM.CXP_TRASLADO_FINTRA;
	ANALYZE  TEM.CXP_TRASLADO_FINTRA;

        INSERT INTO TEM.CXP_TRASLADO_FINTRA
	SELECT * FROM(
		SELECT
			_DOCUMENTO_TO AS DOCUMENTO,
			T1.TIPO_DOCUMENTO,
			T1.CODIGO_CUENTA AS CUENTA,
			T1.PROVEEDOR, ---'8020220161'::VARCHAR AS PROVEEDOR,	--NIT FINTRA
			T1.ID_ACCION,
			T1.NUM_OS,
			T1.CENTRO_COSTOS_INGRESO,
			T1.CENTRO_COSTOS_GASTOS,
			--ROUND(T1.VLR-(T1.VLR*(T1.TOTAL_DESCUENTO_FACTORING/100))) AS VALOR_DEB,
			ROUND(T1.VLR-(T1.VLR*ROUND(T1.TOTAL_DESCUENTO_FACTORING/100,5)),2) AS VALOR_DEB,
			0.00::NUMERIC AS VALOR_CREDT,
			UPPER(T1.DESCRIPCION) AS  DESCRIPCION,
			DOCUMENTO_SOP
		 FROM (
		      SELECT CXP.PROVEEDOR,
			     CXP.TIPO_DOCUMENTO,
			     CXP.DOCUMENTO,
			     'CANCELA CXP FINAL CONTRATISTA POR TRASLADO A FINTRA : '||ACC.ID_ACCION AS DESCRIPCION,
			     SUM(CXPDET.VLR) AS VLR,
			     '22050801'::VARCHAR AS CODIGO_CUENTA,
			     ACC.ID_ACCION,
			     OFER.NUM_OS,
			     OFER.CENTRO_COSTOS_INGRESO,
			     OFER.CENTRO_COSTOS_GASTOS,
			     ACC.POR_FACTORING_CONTRATISTA,
			     ACC.POR_FORMULA_CONTRATISTA,
			     (ACC.POR_FACTORING_CONTRATISTA+ACC.POR_FORMULA_CONTRATISTA) AS TOTAL_DESCUENTO_FACTORING,
			     CXP.FECHA_DOCUMENTO,
			     CXP.FECHA_VENCIMIENTO,
			     CXP.DOCUMENTO AS DOCUMENTO_SOP
		      FROM FIN.CXP_ITEMS_DOC CXPDET
		      INNER JOIN FIN.CXP_DOC CXP ON (CXP.DOCUMENTO=CXPDET.DOCUMENTO AND CXP.TIPO_DOCUMENTO=CXPDET.TIPO_DOCUMENTO AND CXP.PROVEEDOR=CXPDET.PROVEEDOR)
		      INNER JOIN OPAV.ACCIONES ACC ON (ACC.ID_ACCION=CXPDET.REFERENCIA_1 AND ACC.REG_STATUS!='A')
		      INNER JOIN OPAV.OFERTAS AS OFER ON (ACC.ID_SOLICITUD = OFER.ID_SOLICITUD)
		      INNER JOIN PROVEEDOR AS PRV  ON (CXP.PROVEEDOR=PRV.NIT)
		      WHERE
		      CXP.DOCUMENTO=_FACTURA_FINAL
		      AND CXP.PROVEEDOR =_PROVEEDOR_FINAL
		      AND CXP.TIPO_DOCUMENTO='FAP'
		      AND CXP.HANDLE_CODE ='CD'
		      AND CXP.DESCRIPCION LIKE 'Reunifica facturas internas:%'
		      AND COALESCE(PROCESADO,'N')  = 'S'
		      AND ACC.ID_ACCION NOT IN ('9042627','9042628')
		      GROUP BY
		      CXP.PROVEEDOR,
		      CXP.TIPO_DOCUMENTO,
		      CXP.DOCUMENTO,
		      CXPDET.CODIGO_CUENTA,
		      ACC.ID_ACCION,
		      ACC.POR_FACTORING_CONTRATISTA,
		      ACC.POR_FORMULA_CONTRATISTA,
		      OFER.CENTRO_COSTOS_INGRESO,
		      OFER.CENTRO_COSTOS_GASTOS,
		      OFER.NUM_OS,
		      CXP.FECHA_DOCUMENTO,
		      CXP.FECHA_VENCIMIENTO
		)T1
		UNION ALL
		--busca factoring, formula, extemporaneo 1-2 ,iteres
		SELECT
			_DOCUMENTO_TO AS DOCUMENTO,
			CXP.TIPO_DOCUMENTO,
			CXPDET.CODIGO_CUENTA AS CUENTA,
			TEM.GETNITPROVEEDOR(CXPDET.DESCRIPCION::VARCHAR,_PROVEEDOR_FINAL::VARCHAR, CXP.PROVEEDOR::VARCHAR) AS PROVEEDOR,
			ACC.ID_ACCION,
			OFER.NUM_OS,
			OFER.CENTRO_COSTOS_INGRESO,
			OFER.CENTRO_COSTOS_GASTOS,
			CXPDET.VLR AS VALOR_DEB,
			0.00::NUMERIC AS VALOR_CREDT,
			UPPER(CXPDET.DESCRIPCION)AS  DESCRIPCION,
			TEM.DV_ACCION_NM(ACC.ID_ACCION,CXPDET.DESCRIPCION,CXPDET.VLR, CXPDET.CODIGO_CUENTA,_FACTURA_FINAL::VARCHAR) AS DOCUMENTO_SOP
		FROM FIN.CXP_ITEMS_DOC CXPDET
		INNER JOIN FIN.CXP_DOC CXP ON (CXPDET.DOCUMENTO =CXP.DOCUMENTO AND CXPDET.TIPO_DOCUMENTO=CXP.TIPO_DOCUMENTO  AND CXP.PROVEEDOR=CXPDET.PROVEEDOR )
		LEFT JOIN OPAV.ACCIONES ACC ON (ACC.ID_ACCION=CXPDET.REFERENCIA_1 AND ACC.REG_STATUS!='A')
		LEFT JOIN OPAV.OFERTAS AS OFER	ON (ACC.ID_SOLICITUD = OFER.ID_SOLICITUD)
		WHERE CXP.TIPO_DOCUMENTO= 'FAP'
		AND   CXP.HANDLE_CODE = 'TF'
		AND   CXP.DOCUMENTO = _DOCUMENTO_TO
		AND   CXP.PROVEEDOR = NIT_TO
		AND   CXP.REG_STATUS =''
		AND   CXPDET.REG_STATUS=''
		AND   CXPDET.VLR !=0
		--AND CXPDET.DESCRIPCION NOT IN ('IVA ECA','COMISION ECA')

		UNION ALL
		--busca la comision eca e iva eca
		SELECT _DOCUMENTO_TO AS DOCUMENTO,
		       FDET.TIPO_DOCUMENTO,
		       FDET.CODIGO_CUENTA_CONTABLE AS CUENTA,
		       '8020220161'::VARCHAR AS PROVEEDOR ,
		       FDET.REFERENCIA_1 AS ID_ACCION,
		       FAC.REF1 AS NUM_OS,
		       OFER.CENTRO_COSTOS_INGRESO,
		       OFER.CENTRO_COSTOS_GASTOS,
		       FDET.VALOR_UNITARIO AS VALOR_DEB,
		       0.00::NUMERIC AS VALOR_CREDT,
		       UPPER(FDET.DESCRIPCION)AS  DESCRIPCION,
		       FDET.DOCUMENTO AS  DOCUMENTO_SOP
		FROM CON.FACTURA_DETALLE  FDET
		INNER JOIN CON.FACTURA FAC ON (FAC.DOCUMENTO=FDET.DOCUMENTO AND FDET.TIPO_DOCUMENTO=FAC.TIPO_DOCUMENTO)
		INNER  JOIN OPAV.OFERTAS AS OFER ON (FAC.REFERENCIA_1 = OFER.ID_SOLICITUD)
		WHERE FDET.REFERENCIA_1  IN (SELECT REFERENCIA_1 FROM FIN.CXP_ITEMS_DOC  WHERE DOCUMENTO=_DOCUMENTO_TO AND PROVEEDOR = NIT_TO AND TIPO_REFERENCIA_1='ACC' AND CODIGO_CUENTA IN ('28151005','28151010'))
		AND FDET.REG_STATUS=''
		AND FAC.REG_STATUS=''
		AND FDET.TIPO_DOCUMENTO='FAC' AND FDET.CONCEPTO IN (222,231)

	)t;

	RETURN RESULTADO;
END;
$BODY$
  LANGUAGE plpgsql VOLATILE;
ALTER FUNCTION con.eg_movimiento_contable_paso6(character varying, character varying, character varying, character varying)
  OWNER TO postgres;
