-- Function: con.interfaz_fintra_ut_apoteosys_transacciones()

-- DROP FUNCTION con.interfaz_fintra_ut_apoteosys_transacciones();

CREATE OR REPLACE FUNCTION con.interfaz_fintra_ut_apoteosys_transacciones()
  RETURNS text AS
$BODY$

DECLARE

 /************************************************
  *DESCRIPCION: ESTA FUNCION TOMA LAS PLANILLAS DE UT Y
  *OBTIENE LOS ANTICIPOS POR TRANSFERENCIA Y CONTRUYE EL ASIENTO
  *CONTABLE QUE MAS ADELANTE SE TRASLADARA A APOTEOSYS.
  *DOCUMENTACION:=
  *AUTOR:=@JZAPATA
  *FECHA CREACION:=2018-01-18
  *LAST_UPDATE
  *DESCRIPCION DE CAMBIOS Y FECHA
  ************************************************/

 REC_OS RECORD;
 REC_AET RECORD;
 REC_PLA RECORD;
 SECUENCIA_TR INTEGER;
 CONSEC INTEGER:=1;
 FECHADOC_ TEXT:='';
 CORRIDA TEXT:='';
 SW TEXT:='N';
 _ARRCUENTASAET VARCHAR[] :='{}';
 MCTYPE CON.TYPE_INSERT_MC;


 BEGIN

	--SE CONSULTA EL VECTOR DE CUENTAS Y SE ASIGNA
	_ARRCUENTASAET:=ETES.GET_CUENTAS_PERFIL('AET_TRANSFERENCIA');

	--SE ACTUALIZA LA CORRIDA EN LA TABLA CON.PLANILLAS_PROCESADAS_UT SI LA ENCUENTRA

	FOR REC_PLA IN

		select
			planilla
		from
			con.planillas_procesadas_ut
		where
			factura_cxc=''

	LOOP

		corrida:='';

		select
			INTO corrida a.cxc_corrida
		from
		(
		select
			cxc_corrida
		from
			etes.manifiesto_carga
		where
			planilla=REC_PLA.planilla
		union all
		select
			cxc_corrida
		from
			etes.manifiesto_reanticipos
		where
			planilla=REC_PLA.planilla
		)
		as a;

		raise notice 'Planilla: %',REC_PLA.planilla;
		raise notice 'Corrida: %',corrida;
		if(corrida!='') then
			update con.planillas_procesadas_ut set factura_cxc=corrida where planilla=REC_PLA.planilla;
		end if;

	END LOOP;

	--SE CONSULTAN LOS REGISTROS QUE SE VAN A TRANSPORTAR PARA TRANSFERENCIAS

	FOR REC_OS IN

		select
			PRODUCTO_SER.CODIGO_PROSERV,
			A.PLANILLA,
			A.CREATION_DATE,
			A.DOCUMENTO_CXP AS FACTURA_CXP,
			A.CXC_CORRIDA AS FACTURA_CXC,
			A.NUMERO_EGRESO AS EGRESO,
			'AET' AS TIPO_OPERACION
		from
			etes.manifiesto_carga A
		INNER JOIN
			ETES.PRODUCTOS_SERVICIOS_TRANSP AS PRODUCTO_SER ON (A.ID_PROSERV=PRODUCTO_SER.ID)
		where
			A.REG_STATUS!='A' AND
			A.DSTRCT='FINV' AND
			A.TRANSACCION!=0 AND
			A.PERIODO_CONTABILIZACION!='' AND
			A.FECHA_CONTABILIZACION::DATE >= '2014-01-01' AND
			A.PERIODO_CONTABILIZACION =REPLACE(SUBSTRING(CURRENT_DATE,1,7),'-','') AND
			--A.PERIODO_CONTABILIZACION ='201806' and
			PRODUCTO_SER.CODIGO_PROSERV='ANT00002' AND
			A.fecha_transferencia!='0099-01-01 00:00:00'::timestamp without time zone and
			A.aprobado='S' and
			(A.PLANILLA,a.DOCUMENTO_CXP,a.NUMERO_EGRESO, 'AET') NOT IN(SELECT
													PLANILLA,
													factura_cxp,
													egreso,
													tipo_operacion
												FROM
													con.planillas_procesadas_ut
												)
			--and planilla='9000243'
		union all
		select
			PRODUCTO_SER.CODIGO_PROSERV,
			A.PLANILLA,
			A.CREATION_DATE,
			A.DOCUMENTO_CXP AS FACTURA_CXP,
			A.CXC_CORRIDA AS FACTURA_CXC,
			A.NUMERO_EGRESO AS EGRESO,
			'AET' AS TIPO_OPERACION
		from
			etes.manifiesto_reanticipos A
		INNER JOIN
			ETES.MANIFIESTO_CARGA AS B ON (A.ID_MANIFIESTO_CARGA=B.ID)
		INNER JOIN
			ETES.PRODUCTOS_SERVICIOS_TRANSP AS PRODUCTO_SER ON (B.ID_PROSERV=PRODUCTO_SER.ID)
		where
			A.REG_STATUS!='A' AND
			A.DSTRCT='FINV' AND
			A.TRANSACCION!=0 AND
			A.PERIODO_CONTABILIZACION!='' AND
			A.FECHA_CONTABILIZACION::DATE >= '2014-01-01' AND
			A.PERIODO_CONTABILIZACION =REPLACE(SUBSTRING(CURRENT_DATE,1,7),'-','') AND
			--A.PERIODO_CONTABILIZACION ='201806' and
			PRODUCTO_SER.CODIGO_PROSERV='ANT00002' AND
			A.fecha_transferencia!='0099-01-01 00:00:00'::timestamp without time zone and
			A.aprobado='S' and
			(A.PLANILLA,a.DOCUMENTO_CXP,a.NUMERO_EGRESO, 'AET') NOT IN(SELECT
													PLANILLA,
													factura_cxp,
													egreso,
													tipo_operacion
												FROM
												con.planillas_procesadas_ut
												)
			--and planilla='9000243'
		ORDER BY 3, 2
/**
select con.interfaz_fintra_ut_apoteosys_transacciones();

select * from etes.manifiesto_carga where cxc_corrida='' and reg_status='';

select COUNT(*) from con.mc____ where MC_____CODIGO____TD_____B = 'OPER' and MC_____CODIGO____CD_____B = 'AET' and procesado='N';

delete from con.mc____ where MC_____CODIGO____TD_____B = 'OPER' and MC_____CODIGO____CD_____B = 'AET' and procesado='N' and mc_____numero____b=592312;

delete from con.planillas_procesadas_ut;

*/


	LOOP

		raise notice 'Planilla: %',REC_OS.planilla;

		SECUENCIA_TR:=0;
		CONSEC :=1;

		--SECUENCIA DE LA TRANSACCION
		SELECT INTO SECUENCIA_TR NEXTVAL('CON.INTERFAZ_SECUENCIA_OPER_APOTEOSYS');

		FOR REC_AET IN

			SELECT
				 A.FECHADOC,
				 B.TIPODOC,
				 B.GRUPO_TRANSACCION,
				 B.PERIODO,
				 B.CUENTA,
				 CASE WHEN HT.NIT_APOTEOSYS IS NOT NULL THEN HT.NIT_APOTEOSYS ELSE B.TERCERO END AS TERCERO,
				 --A.TERCERO,
				 B.VALOR_DEBITO,
				 B.VALOR_CREDITO,
				 B.DETALLE,
				 B.CREATION_DATE,
				 B.CREATION_USER,
				 B.LAST_UPDATE,
				 B.USER_UPDATE,
				 (CASE
				 WHEN D.TIPO_IDEN='CED' THEN 'CC'
				 WHEN D.TIPO_IDEN='RIF' THEN 'CE'
				 WHEN D.TIPO_IDEN='NIT' THEN 'NIT' ELSE
				 'CC' END) AS TERCER_CODIGO____TIT____B,
				 C.DIGITO_VERIFICACION AS TERCER_DIGICHEQ__B,
				 (D.NOMBRE1||' '||D.NOMBRE2) AS TERCER_NOMBCORT__B,
				 (D.APELLIDO1||' '||D.APELLIDO2) AS TERCER_APELLIDOS_B,
				 D.NOMBRE AS TERCER_NOMBEXTE__B,
				 (CASE
				 WHEN C.GRAN_CONTRIBUYENTE='N' AND C.AGENTE_RETENEDOR='N' THEN 'RCOM'
				 WHEN C.GRAN_CONTRIBUYENTE='N' AND C.AGENTE_RETENEDOR='S' THEN 'RCAU'
				 WHEN C.GRAN_CONTRIBUYENTE='S' AND C.AGENTE_RETENEDOR='N' THEN 'GCON'
				 WHEN C.GRAN_CONTRIBUYENTE='S' AND C.AGENTE_RETENEDOR='S' THEN 'GCAU'
				 ELSE 'PNAL' END) AS TERCER_CODIGO____TT_____B,
				 D.DIRECCION AS TERCER_DIRECCION_B,
				 (CASE
				 WHEN E.CODIGO_DANE2!='' THEN E.CODIGO_DANE2
				 ELSE '08001' END) AS TERCER_CODIGO____CIUDAD_B,
				 D.TELEFONO AS TERCER_TELEFONO1_B
			FROM
				CON.COMPROBANTE A
			INNER JOIN
				CON.COMPRODET B ON(B.DSTRCT=A.DSTRCT AND B.TIPODOC=A.TIPODOC AND B.NUMDOC=A.NUMDOC AND B.GRUPO_TRANSACCION=A.GRUPO_TRANSACCION)
			LEFT JOIN
				PROVEEDOR C ON(C.NIT=B.TERCERO)
			LEFT JOIN
				NIT D ON(D.CEDULA=C.NIT)
			LEFT JOIN
				CIUDAD E ON(E.CODCIU=D.CODCIU)
			LEFT JOIN
				CON.HOMOLOGA_TERCEROS HT ON(HT.NIT_FINTRA=B.TERCERO)
			WHERE
				A.DSTRCT='FINV' AND
				(A.TIPODOC, A.NUMDOC, B.CUENTA) =('AET',REC_OS.planilla, _ARRCUENTASAET[2]) OR
				(A.TIPODOC, A.NUMDOC, B.CUENTA) =('FAP',REC_OS.factura_cxp, _ARRCUENTASAET[3]) OR
				(A.TIPODOC, B.DOCUMENTO_REL, B.CUENTA) =('FAC',REC_OS.planilla, _ARRCUENTASAET[1])
				order by valor_debito desc,tipodoc

		LOOP

			FECHADOC_ := CASE WHEN REPLACE(SUBSTRING(REC_OS.CREATION_DATE,1,7),'-','')=REC_AET.PERIODO THEN REC_OS.CREATION_DATE::DATE ELSE con.sp_fecha_corte_mes(SUBSTRING(REC_AET.PERIODO,1,4),SUBSTRING(REC_AET.PERIODO,5,2)::INT)::DATE END ;

			IF(CON.OBTENER_HOMOLOGACION_APOTEOSYS('TRANSFERENCIA', REC_AET.TIPODOC, REC_AET.CUENTA,'', 6)='S')THEN
				MCTYPE.MC_____FECHEMIS__B=FECHADOC_::DATE;
				MCTYPE.MC_____FECHVENC__B=FECHADOC_::DATE;
			ELSE
				MCTYPE.MC_____FECHEMIS__B='0099-01-01 00:00:00';
				MCTYPE.MC_____FECHVENC__B='0099-01-01 00:00:00';

			END IF;

			MCTYPE.MC_____CODIGO____CONTAB_B := 'FINT' ;
			MCTYPE.MC_____CODIGO____TD_____B := 'OPER' ;
			MCTYPE.MC_____CODIGO____CD_____B := 'AET'  ;
			MCTYPE.MC_____SECUINTE__DCD____B := CONSEC  ;
			MCTYPE.MC_____FECHA_____B := CASE WHEN (REC_OS.CREATION_DATE::DATE > FECHADOC_::DATE AND REPLACE(SUBSTRING(REC_OS.CREATION_DATE,1,7),'-','')=REC_AET.PERIODO)  THEN REC_OS.CREATION_DATE::DATE ELSE FECHADOC_::DATE END;
			--MCTYPE.MC_____FECHA_____B := REC_OS.CREATION_DATE::DATE  ;
			MCTYPE.MC_____NUMERO____B := SECUENCIA_TR  ;
			MCTYPE.MC_____SECUINTE__B := CONSEC  ;
			MCTYPE.MC_____REFERENCI_B := REC_OS.planilla  ;
			MCTYPE.MC_____CODIGO____PF_____B := SUBSTRING(REC_AET.PERIODO,1,4)::INT  ;
			MCTYPE.MC_____NUMERO____PERIOD_B := SUBSTRING(REC_AET.PERIODO,5,2)::INT  ;
			MCTYPE.MC_____CODIGO____PC_____B :=  'PUCF' ;
			MCTYPE.MC_____CODIGO____CPC____B := CON.OBTENER_HOMOLOGACION_APOTEOSYS('TRANSFERENCIA', REC_AET.TIPODOC, REC_AET.CUENTA,'', 1)  ;
			MCTYPE.MC_____CODIGO____CU_____B := CON.OBTENER_HOMOLOGACION_APOTEOSYS('TRANSFERENCIA', REC_AET.TIPODOC, REC_AET.CUENTA,'', 2)  ;
			MCTYPE.MC_____IDENTIFIC_TERCER_B := CASE WHEN CHAR_LENGTH(REC_AET.TERCERO)>10 THEN SUBSTR(REC_AET.TERCERO,1,10) ELSE REC_AET.TERCERO END;
			MCTYPE.MC_____DEBMONORI_B := 0  ;
			MCTYPE.MC_____CREMONORI_B := 0 ;
			MCTYPE.MC_____DEBMONLOC_B := REC_AET.VALOR_DEBITO::NUMERIC  ;
			MCTYPE.MC_____CREMONLOC_B := REC_AET.VALOR_CREDITO::NUMERIC  ;
			MCTYPE.MC_____INDTIPMOV_B := 4  ;
			MCTYPE.MC_____INDMOVREV_B := 'N'  ;
			MCTYPE.MC_____OBSERVACI_B := REC_AET.DETALLE ||'-UT';
			MCTYPE.MC_____FECHORCRE_B := REC_AET.CREATION_DATE::TIMESTAMP  ;
			MCTYPE.MC_____AUTOCREA__B := 'ADMIN'  ;
			MCTYPE.MC_____FEHOULMO__B := REC_AET.LAST_UPDATE::TIMESTAMP  ;
			MCTYPE.MC_____AUTULTMOD_B := ''  ;
			MCTYPE.MC_____VALIMPCON_B := 0  ;
			MCTYPE.MC_____NUMERO_OPER_B := REC_OS.planilla;
			MCTYPE.TERCER_CODIGO____TIT____B := REC_AET.TERCER_CODIGO____TIT____B  ;
			MCTYPE.TERCER_NOMBCORT__B := CASE WHEN CHAR_LENGTH(REC_AET.TERCER_NOMBCORT__B)>32 THEN SUBSTR(REC_AET.TERCER_NOMBCORT__B,1,32) ELSE REC_AET.TERCER_NOMBCORT__B END;
			MCTYPE.TERCER_NOMBEXTE__B := REC_AET.TERCER_NOMBEXTE__B  ;
			MCTYPE.TERCER_APELLIDOS_B := CASE WHEN CHAR_LENGTH(REC_AET.TERCER_APELLIDOS_B)>32 THEN SUBSTR(REC_AET.TERCER_APELLIDOS_B,1,32) ELSE REC_AET.TERCER_APELLIDOS_B END;
			MCTYPE.TERCER_CODIGO____TT_____B := REC_AET.TERCER_CODIGO____TT_____B  ;
			MCTYPE.TERCER_DIRECCION_B := CASE WHEN REC_AET.TERCER_DIRECCION_B IS NULL OR  REC_AET.TERCER_DIRECCION_B='' THEN 'CASA1' ELSE REC_AET.TERCER_DIRECCION_B END ;
			MCTYPE.TERCER_CODIGO____CIUDAD_B := REC_AET.TERCER_CODIGO____CIUDAD_B  ;
			MCTYPE.TERCER_TELEFONO1_B := CASE WHEN CHAR_LENGTH(REC_AET.TERCER_TELEFONO1_B)>15 THEN SUBSTR(REC_AET.TERCER_TELEFONO1_B,1,15) ELSE REC_AET.TERCER_TELEFONO1_B END;
			MCTYPE.TERCER_TIPOGIRO__B := 1 ;
			MCTYPE.TERCER_CODIGO____EF_____B := ''  ;
			MCTYPE.TERCER_SUCURSAL__B := ''  ;
			MCTYPE.TERCER_NUMECUEN__B := ''  ;
			MCTYPE.MC_____CODIGO____DS_____B := CON.OBTENER_HOMOLOGACION_APOTEOSYS('TRANSFERENCIA', REC_AET.TIPODOC, REC_AET.CUENTA,'', 3);
			MCTYPE.MC_____NUMDOCSOP_B := REC_OS.planilla;
			MCTYPE.MC_____NUMEVENC__B := CON.OBTENER_HOMOLOGACION_APOTEOSYS('TRANSFERENCIA', REC_AET.TIPODOC, REC_AET.CUENTA,'', 5)::INT;

			IF(CON.OBTENER_HOMOLOGACION_APOTEOSYS('TRANSFERENCIA', REC_AET.TIPODOC, REC_AET.CUENTA,'', 4)='S')THEN
				MCTYPE.MC_____NUMDOCSOP_B := REC_OS.planilla;
			ELSE
				MCTYPE.MC_____NUMDOCSOP_B := '';
			END IF;

			IF(CON.OBTENER_HOMOLOGACION_APOTEOSYS('TRANSFERENCIA', REC_AET.TIPODOC, REC_AET.CUENTA,'', 5)::INT=1)THEN
				MCTYPE.MC_____NUMEVENC__B := 1;
			ELSE
				MCTYPE.MC_____NUMEVENC__B := NULL;
			END IF;

			--FUNCION QUE TRANSACCION POR TIPO DE DOCUMENTO EN TABLA TEMPORAL EN FINTRA.
			SW:=CON.SP_INSERT_TABLE_MC( MCTYPE);
			CONSEC:=CONSEC+1;

		END LOOP;

		--VALIDAMOS VALORES DEBITOS Y CREDITOS DEL COMPROBANTE A TRASLADAR.
		IF CON.SP_VALIDACIONES(MCTYPE, 'LOGISTICA') ='N' THEN
			SW='N';
			CONTINUE;
		END IF;

		IF(SW='S')THEN

			insert into
				con.planillas_procesadas_ut(planilla, factura_cxp, factura_cxc, egreso, tipo_operacion, creation_date_planilla)
			values
				(REC_OS.planilla, REC_OS.factura_cxp, REC_OS.factura_cxc, REC_OS.egreso, 'AET', REC_OS.creation_date);
			SW:='N';
		END IF;

	END LOOP;

	RETURN 'OK';

END;
$BODY$
  LANGUAGE plpgsql VOLATILE;
ALTER FUNCTION con.interfaz_fintra_ut_apoteosys_transacciones()
  OWNER TO postgres;
